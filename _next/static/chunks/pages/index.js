_N_E =
(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/OTcwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanM/NWJjMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGlCQUFpQixrQkFBa0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanM/OTUyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanM/YzMxZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWU7QUFDZjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/esm/extends.js\n");

/***/ }),

/***/ "./node_modules/@stitches/core/dist/core.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@stitches/core/dist/core.esm.js ***!
  \******************************************************/
/*! exports provided: ATOM, MAIN_BREAKPOINT_ID, _ATOM, createCss, createSheets, createTokens, cssPropToToken, getVendorPrefixAndProps, hashString, hotReloadingCache, specificityProps, tokenTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ATOM\", function() { return ATOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MAIN_BREAKPOINT_ID\", function() { return MAIN_BREAKPOINT_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_ATOM\", function() { return _ATOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createCss\", function() { return createCss; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSheets\", function() { return createSheets; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTokens\", function() { return createTokens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssPropToToken\", function() { return cssPropToToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getVendorPrefixAndProps\", function() { return getVendorPrefixAndProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hashString\", function() { return hashString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hotReloadingCache\", function() { return hotReloadingCache; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"specificityProps\", function() { return specificityProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenTypes\", function() { return tokenTypes$1; });\nvar tokenTypes = ['colors', 'space', 'fontSizes', 'fonts', 'fontWeights', 'lineHeights', 'letterSpacings', 'sizes', 'borderWidths', 'borderStyles', 'radii', 'shadows', 'zIndices', 'transitions']; // Note: when running Jest tests, make sure that the test file is running in node env\n// if this constant was giving incorrect results.\n\nvar isServer = typeof window === 'undefined';\n\nvar ATOM = Symbol('ATOM');\n\nvar unitlessKeys = {\n  // animation duration only added so that it's ignored:\n  animationDuration: 1,\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nvar TOKEN_STRING = 1;\nvar TOKEN_QUOTED_STRING = 2;\nvar TOKEN_FUNCTION = 3;\nvar TOKEN_BRACKET = 4;\nvar currentType;\nvar currentToken = '';\nvar currentDepth = 0;\nvar tokenGroups = [[]];\nvar tokenizeValue = function tokenizeValue(str) {\n  resetCurrentToken();\n  tokenGroups = [[]];\n\n  if (!str) {\n    return tokenGroups;\n  }\n\n  var strLength = str.length;\n\n  for (var i = 0; i < strLength; i++) {\n    var _char = str[i];\n\n    switch (_char) {\n      // whitespace\n      case ' ':\n        if (currentType === TOKEN_STRING) {\n          addCurrentTokenToGroup();\n        } else if (currentType) {\n          currentToken += _char;\n        }\n\n        break;\n      // new token group\n\n      case ',':\n        if (!currentDepth) {\n          addCurrentTokenToGroup();\n          addNewTokenGroup();\n        } else {\n          currentToken += _char;\n        }\n\n        break;\n      // Quoted string:\n\n      case '\"':\n        currentToken += _char;\n\n        if (!currentDepth && !currentType) {\n          currentType = TOKEN_QUOTED_STRING;\n          currentDepth = 1;\n        } else if (currentDepth === 1 && currentType === TOKEN_QUOTED_STRING) {\n          currentDepth = 0;\n          addCurrentTokenToGroup();\n        }\n\n        break;\n      // Css function:\n\n      case '(':\n        if (!currentDepth) currentType = TOKEN_FUNCTION;\n        currentDepth++;\n        currentToken += _char;\n        break;\n\n      case ')':\n        currentToken += _char;\n        currentDepth--;\n        if (currentType === TOKEN_FUNCTION && !currentDepth) addCurrentTokenToGroup();\n        break;\n      // Bracket values:\n\n      case '[':\n        if (!currentDepth) currentType = TOKEN_BRACKET;\n        currentToken += _char;\n        currentDepth++;\n        break;\n\n      case ']':\n        currentToken += _char;\n        currentDepth--;\n        if (!currentDepth) addCurrentTokenToGroup();\n        break;\n\n      default:\n        if (!currentType) currentType = TOKEN_STRING;\n        currentToken += _char;\n    }\n  }\n\n  if (currentToken) addCurrentTokenToGroup();\n  return tokenGroups;\n};\n/**\n * UTILS:\n */\n\n/**\n * Resets the current token info\n */\n\nfunction resetCurrentToken() {\n  currentDepth = currentType = 0;\n  currentToken = '';\n}\n/**\n * Adds current token to the stack then starts a new one\n */\n\n\nfunction addCurrentTokenToGroup() {\n  if (currentType) tokenGroups[tokenGroups.length - 1].push(currentToken);\n  resetCurrentToken();\n}\n/**\n * Adds a new token group and requests a new one\n * For things like animations or box shadow where there might be multiple rules\n * applied to the same value\n */\n\n\nfunction addNewTokenGroup() {\n  tokenGroups[tokenGroups.length] = [];\n  resetCurrentToken();\n}\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar unitMatch = /^[0-9.]+[a-z|%]/;\nvar easingMatch = /\\(.*\\)|ease|ease-in|ease-out|ease-in-out|linear|step-start|step-end/;\nvar fontSizeMatch = /^([+-]?[0-9.]+([a-z]+|%)?|large(r)?|medium|small(er)?|x{1,3}-large|x{1,2}-small)(\\/[+-]?[0-9.]+([a-z]+|%)?)?$/;\nvar fontStyleMatch = /^[+-]?[0-9.]+deg$/;\nvar fontWeightMatch = /^(0*[1-9][0-9]{0,2}|1000|bold(er)?|lighter)$/;\n\nvar matchString = function matchString(val, regex) {\n  return typeof val === 'number' ? false : val.match(regex);\n};\n\nvar setChainedValue = function setChainedValue(existingValue, value) {\n  return existingValue ? \"\".concat(existingValue, \",\").concat(value) : value;\n};\n\nvar emptyTokens = {};\ntokenTypes.forEach(function (type) {\n  return emptyTokens[type] = {};\n});\n/*\n  The generic CSS prop value parser. Converts any css value into an\n  array of chains, where each chain is an array of individual values\n*/\n\nvar createPropertyParser = function createPropertyParser(type) {\n  return function (tokens, value) {\n    var chains = typeof value === 'number' ? [[value]] : tokenizeValue(value);\n    var css = {}; // TODO: refactor this\n\n    var tmpTokens = typeof value === 'number' ? emptyTokens : tokens;\n    chains.forEach(function (chain, chainIndex) {\n      // tslint:disable-next-line\n      chain.forEach(function (_value, index) {\n        type(tmpTokens, css, _value, index, chain, chainIndex, chains);\n      });\n    });\n    return css;\n  };\n};\n\nvar background = createPropertyParser(function (tokens, css, value, index, chain, chainIndex, chains) {\n  if (value === '/') {\n    return;\n  } else if (matchString(value, /scroll|local|fixed/)) css.backgroundAttachment = setChainedValue(css.backgroundAttachment, value);else if (matchString(value, /^url|linear-gradient|element|image|cross-fade|image-set/)) css.backgroundImage = setChainedValue(css.backgroundImage, value);else if (matchString(value, /border-box|padding-box|content-box|text/)) {\n    if (chain.filter(function (chainPart) {\n      return chainPart.match(/border-box|padding-box|content-box|text/);\n    }).length === 1) {\n      css.backgroundOrigin = setChainedValue(css.backgroundOrigin, value);\n      css.backgroundClip = setChainedValue(css.backgroundClip, value);\n    } else if (chain.findIndex(function (chainPart) {\n      return chainPart.match(/border-box|padding-box|content-box|text/);\n    }) === index) {\n      css.backgroundOrigin = setChainedValue(css.backgroundOrigin, value);\n    } else {\n      css.backgroundClip = setChainedValue(css.backgroundClip, value);\n    }\n  } else if (chain[index - 1] === '/') {\n    css.backgroundSize = setChainedValue(css.backgroundSize, tokens.sizes[value] || value);\n  } else if (matchString(value, /center|top|right|bottom|left/) || matchString(value, unitMatch) || tokens.sizes[value]) css.backgroundPosition = setChainedValue(css.backgroundPosition, tokens.sizes[value] || value);else if (matchString(value, /repeat|no-repeat|repeat-x|repeat-y|space|round/)) css.backgroundRepeat = setChainedValue(css.backgroundRepeat, value);else {\n    if (chainIndex !== chains.length - 1) {\n      throw new Error('You can only add background colors on the last chain');\n    }\n\n    css.backgroundColor = setChainedValue(css.backgroundColor, tokens.colors[value] || value);\n  }\n});\nvar animation = createPropertyParser(function (_, css, value, index, chain) {\n  if (matchString(value, easingMatch)) {\n    css.animationTimingFunction = setChainedValue(css.animationTimingFunction, value);\n  } else if (matchString(value, /^\\d+$|infinite/)) {\n    css.animationIterationCount = setChainedValue(css.animationIterationCount, value);\n  } else if (matchString(value, /normal|reverse|alternate|alternate-reverse/)) {\n    css.animationDirection = setChainedValue(css.animationDirection, value);\n  } else if (matchString(value, /none|forward|backwards|both/)) {\n    css.animationFillMode = setChainedValue(css.animationFillMode, value);\n  } else if (matchString(value, /running|paused/)) {\n    css.animationPlayState = setChainedValue(css.animationPlayState, value);\n  } else if (matchString(value, unitMatch)) {\n    if (chain.findIndex(function (part) {\n      return part.match(unitMatch);\n    }) === index) {\n      css.animationDuration = setChainedValue(css.animationDuration, value);\n    } else {\n      css.animationDelay = setChainedValue(css.animationDelay, value);\n    }\n  } else {\n    css.animationName = setChainedValue(css.animationName, value);\n  }\n});\nvar font = createPropertyParser(function (tokens, css, value, index, chain, chainIndex, chains) {\n  if (chains.shouldParseFontFamily) {\n    css.fontFamily = setChainedValue(css.fontFamily, tokens.fonts[value] || value);\n  } else {\n    var lower = value.toLowerCase();\n\n    switch (true) {\n      case fontStyleMatch.test(lower):\n        css.fontStyle += \" \".concat(value);\n        break;\n\n      case fontWeightMatch.test(lower):\n        css.fontWeight = tokens.fontWeights[value] || value;\n        break;\n\n      case fontSizeMatch.test(lower):\n        chains.shouldParseFontFamily = true;\n\n        var _value$split = value.split('/'),\n            _value$split2 = _slicedToArray(_value$split, 2),\n            fontSize = _value$split2[0],\n            lineHeight = _value$split2[1];\n\n        css.fontSize = tokens.fontSizes[fontSize] || fontSize;\n\n        if (lineHeight) {\n          css.lineHeight = tokens.lineHeights[lineHeight] || lineHeight;\n        }\n\n        break;\n\n      case lower === 'italic':\n      case lower === 'oblique':\n        css.fontStyle = value;\n        break;\n\n      case lower === 'small-caps':\n        css.fontVariant = value;\n        break;\n\n      case lower === 'condensed':\n      case lower === 'expanded':\n      case lower === 'extra-condensed':\n      case lower === 'extra-expanded':\n      case lower === 'semi-condensed':\n      case lower === 'semi-expanded':\n      case lower === 'ultra-condensed':\n      case lower === 'ultra-expanded':\n        css.fontStretch = value;\n        break;\n\n      case lower === 'caption':\n      case lower === 'icon':\n      case lower === 'menu':\n      case lower === 'message-box':\n      case lower === 'small-caption':\n      case lower === 'status-bar':\n        chains.shouldParseFontFamily = true;\n        css.fontFamily = setChainedValue(css.fontFamily, tokens.fonts[value] || value);\n        break;\n    }\n  }\n});\nvar transition = createPropertyParser( // The whole token is a transition, so need to grab it before passing in here\nfunction (_, css, value, index, chain) {\n  if (matchString(value, unitMatch)) {\n    if (chain.findIndex(function (part) {\n      return part.match(unitMatch);\n    }) === index) {\n      css.transitionDuration = setChainedValue(css.transitionDuration, value);\n    } else {\n      css.transitionDelay = setChainedValue(css.transitionDelay, value);\n    }\n  } else if (matchString(value, easingMatch)) {\n    css.transitionTimingFunction = setChainedValue(css.transitionTimingFunction, value);\n  } else {\n    css.transitionProperty = setChainedValue(css.transitionProperty, value);\n  }\n});\nvar margin = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.marginTop = tokens.space[value] || value;\n    css.marginRight = tokens.space[value] || value;\n    css.marginBottom = tokens.space[value] || value;\n    css.marginLeft = tokens.space[value] || value;\n  } else if (index === 1) {\n    css.marginRight = tokens.space[value] || value;\n    css.marginLeft = tokens.space[value] || value;\n  } else if (index === 2) {\n    css.marginBottom = tokens.space[value] || value;\n  } else {\n    css.marginLeft = tokens.space[value] || value;\n  }\n});\nvar padding = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.paddingTop = tokens.space[value] || value;\n    css.paddingRight = tokens.space[value] || value;\n    css.paddingBottom = tokens.space[value] || value;\n    css.paddingLeft = tokens.space[value] || value;\n  } else if (index === 1) {\n    css.paddingRight = tokens.space[value] || value;\n    css.paddingLeft = tokens.space[value] || value;\n  } else if (index === 2) {\n    css.paddingBottom = tokens.space[value] || value;\n  } else {\n    css.paddingLeft = tokens.space[value] || value;\n  }\n});\nvar border = createPropertyParser(function (tokens, css, value) {\n  if (matchString(value, /none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset/)) {\n    css.borderTopStyle = value;\n    css.borderRightStyle = value;\n    css.borderBottomStyle = value;\n    css.borderLeftStyle = value;\n  } else if (matchString(value, unitMatch) || tokens.borderWidths[value] || !isNaN(value)) {\n    css.borderTopWidth = tokens.borderWidths[value] || value;\n    css.borderRightWidth = tokens.borderWidths[value] || value;\n    css.borderBottomWidth = tokens.borderWidths[value] || value;\n    css.borderLeftWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderTopColor = tokens.colors[value] || value;\n    css.borderRightColor = tokens.colors[value] || value;\n    css.borderBottomColor = tokens.colors[value] || value;\n    css.borderLeftColor = tokens.colors[value] || value;\n  }\n});\nvar borderTop = createPropertyParser(function (tokens, css, value) {\n  if (matchString(value, /none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset/)) {\n    css.borderTopStyle = value;\n  } else if (matchString(value, unitMatch) || tokens.borderWidths[value] || !isNaN(value)) {\n    css.borderTopWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderTopColor = tokens.colors[value] || value;\n  }\n});\nvar borderRight = createPropertyParser(function (tokens, css, value) {\n  if (matchString(value, /none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset/)) {\n    css.borderRightStyle = value;\n  } else if (matchString(value, unitMatch) || tokens.borderWidths[value] || !isNaN(value)) {\n    css.borderRightWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderRightColor = tokens.colors[value] || value;\n  }\n});\nvar borderLeft = createPropertyParser(function (tokens, css, value) {\n  if (matchString(value, /none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset/)) {\n    css.borderLeftStyle = value;\n  } else if (matchString(value, unitMatch) || tokens.borderWidths[value] || !isNaN(value)) {\n    css.borderLeftWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderLeftColor = tokens.colors[value] || value;\n  }\n});\nvar borderBottom = createPropertyParser(function (tokens, css, value) {\n  if (matchString(value, /none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset/)) {\n    css.borderBottomStyle = value;\n  } else if (matchString(value, unitMatch) || tokens.borderWidths[value] || !isNaN(value)) {\n    css.borderBottomWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderBottomColor = tokens.colors[value] || value;\n  }\n});\nvar borderWidth = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.borderTopWidth = tokens.borderWidths[value] || value;\n    css.borderRightWidth = tokens.borderWidths[value] || value;\n    css.borderBottomWidth = tokens.borderWidths[value] || value;\n    css.borderLeftWidth = tokens.borderWidths[value] || value;\n  } else if (index === 1) {\n    css.borderRightWidth = tokens.borderWidths[value] || value;\n    css.borderLeftWidth = tokens.borderWidths[value] || value;\n  } else if (index === 2) {\n    css.borderBottomWidth = tokens.borderWidths[value] || value;\n  } else {\n    css.borderLeftWidth = tokens.borderWidths[value] || value;\n  }\n});\nvar borderColor = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.borderTopColor = tokens.colors[value] || value;\n    css.borderRightColor = tokens.colors[value] || value;\n    css.borderBottomColor = tokens.colors[value] || value;\n    css.borderLeftColor = tokens.colors[value] || value;\n  } else if (index === 1) {\n    css.borderRightColor = tokens.colors[value] || value;\n    css.borderLeftColor = tokens.colors[value] || value;\n  } else if (index === 2) {\n    css.borderBottomColor = tokens.colors[value] || value;\n  } else {\n    css.borderLeftColor = tokens.colors[value] || value;\n  }\n});\nvar borderStyle = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.borderTopStyle = value;\n    css.borderRightStyle = value;\n    css.borderBottomStyle = value;\n    css.borderLeftStyle = value;\n  } else if (index === 1) {\n    css.borderRightStyle = value;\n    css.borderLeftStyle = value;\n  } else if (index === 2) {\n    css.borderBottomStyle = value;\n  } else {\n    css.borderLeftStyle = value;\n  }\n});\nvar borderRadius = createPropertyParser(function (tokens, css, value, index) {\n  if (index === 0) {\n    css.borderBottomLeftRadius = tokens.radii[value] || value;\n    css.borderTopLeftRadius = tokens.radii[value] || value;\n    css.borderTopRightRadius = tokens.radii[value] || value;\n    css.borderBottomRightRadius = tokens.radii[value] || value;\n  } else if (index === 1) {\n    css.borderTopRightRadius = tokens.radii[value] || value;\n    css.borderBottomLeftRadius = tokens.radii[value] || value;\n  } else if (index === 2) {\n    css.borderBottomRightRadius = tokens.radii[value] || value;\n  } else if (index === 3) {\n    css.borderBottomLeftRadius = tokens.radii[value] || value;\n  }\n});\nvar boxShadow = function boxShadow(tokens, value) {\n  return {\n    boxShadow: tokenizeValue(value).map(function (chain) {\n      return chain.map(function (val) {\n        return tokens.colors[val] || val;\n      }).join(' ');\n    }).join(', ')\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nvar MAIN_BREAKPOINT_ID = 'initial';\nvar cssPropToToken = {\n  gap: 'space',\n  gridGap: 'space',\n  columnGap: 'space',\n  gridColumnGap: 'space',\n  rowGap: 'space',\n  gridRowGap: 'space',\n  inset: 'space',\n  insetBlock: 'space',\n  insetBlockEnd: 'space',\n  insetBlockStart: 'space',\n  insetInline: 'space',\n  insetInlineEnd: 'space',\n  insetInlineStart: 'space',\n  margin: 'space',\n  marginTop: 'space',\n  marginRight: 'space',\n  marginBottom: 'space',\n  marginLeft: 'space',\n  marginBlock: 'space',\n  marginBlockEnd: 'space',\n  marginBlockStart: 'space',\n  marginInline: 'space',\n  marginInlineEnd: 'space',\n  marginInlineStart: 'space',\n  padding: 'space',\n  paddingTop: 'space',\n  paddingRight: 'space',\n  paddingBottom: 'space',\n  paddingLeft: 'space',\n  paddingBlock: 'space',\n  paddingBlockEnd: 'space',\n  paddingBlockStart: 'space',\n  paddingInline: 'space',\n  paddingInlineEnd: 'space',\n  paddingInlineStart: 'space',\n  top: 'space',\n  right: 'space',\n  bottom: 'space',\n  left: 'space',\n  fontSize: 'fontSizes',\n  backgroundColor: 'colors',\n  border: ['', 'borderStyles', 'colors'],\n  borderColor: 'colors',\n  borderTopColor: 'colors',\n  borderRightColor: 'colors',\n  borderBottomColor: 'colors',\n  borderLeftColor: 'colors',\n  caretColor: 'colors',\n  color: 'colors',\n  columnRuleColor: 'colors',\n  outlineColor: 'colors',\n  fill: 'colors',\n  stroke: 'colors',\n  fontFamily: 'fonts',\n  fontWeight: 'fontWeights',\n  lineHeight: 'lineHeights',\n  letterSpacing: 'letterSpacings',\n  blockSize: 'sizes',\n  minBlockSize: 'sizes',\n  maxBlockSize: 'sizes',\n  inlineSize: 'sizes',\n  minInlineSize: 'sizes',\n  maxInlineSize: 'sizes',\n  width: 'sizes',\n  minWidth: 'sizes',\n  maxWidth: 'sizes',\n  height: 'sizes',\n  minHeight: 'sizes',\n  maxHeight: 'sizes',\n  flexBasis: 'sizes',\n  borderWidth: 'borderWidths',\n  borderTopWidth: 'borderWidths',\n  borderLeftWidth: 'borderWidths',\n  borderRightWidth: 'borderWidths',\n  borderBottomWidth: 'borderWidths',\n  borderStyle: 'borderStyles',\n  borderTopStyle: 'borderStyles',\n  borderLeftStyle: 'borderStyles',\n  borderRightStyle: 'borderStyles',\n  borderBottomStyle: 'borderStyles',\n  borderRadius: 'radii',\n  borderTopLeftRadius: 'radii',\n  borderTopRightRadius: 'radii',\n  borderBottomRightRadius: 'radii',\n  borderBottomLeftRadius: 'radii',\n  boxShadow: 'shadows',\n  textShadow: 'shadows',\n  zIndex: 'zIndices',\n  transition: 'transitions'\n};\nvar tokenTypes$1 = ['sizes', 'colors', 'space', 'fontSizes', 'lineHeights', 'fontWeights', 'fonts', 'borderWidths', 'radii'];\n\nvar enhanceSheet = function enhanceSheet(sheet) {\n  return {\n    content: sheet.content,\n    cssRules: sheet.cssRules,\n    insertRule: function insertRule(rule, index) {\n      try {\n        sheet.insertRule(rule, index);\n        return index;\n      } catch (_unused) {\n        return -1;\n      }\n    }\n  };\n};\n\nvar createSheets = function createSheets(env) {\n  var screens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var tags = [];\n\n  if (env && env.document) {\n    var head = env.document.querySelector('head');\n\n    if (!head) {\n      throw new Error('There is no HEAD element on this document');\n    }\n\n    var styles = Array.from(head.querySelectorAll('style'));\n    var existingStyles = styles.filter(function (style) {\n      return Boolean(style.textContent && style.textContent.startsWith('/* STITCHES'));\n    });\n    return {\n      tags: tags,\n      sheets: ['__variables__', MAIN_BREAKPOINT_ID].concat(Object.keys(screens)).reduce(function (aggr, key, index) {\n        var style = existingStyles[index];\n\n        if (!style) {\n          style = env.document.createElement('style');\n          head.appendChild(style);\n        }\n\n        tags.push(style);\n        aggr[key] = enhanceSheet(style.sheet);\n        return aggr;\n      }, {})\n    };\n  }\n\n  return {\n    tags: tags,\n    sheets: ['__variables__', MAIN_BREAKPOINT_ID].concat(Object.keys(screens)).reduce(function (aggr, key) {\n      aggr[key] = enhanceSheet({\n        content: '',\n        cssRules: [],\n        insertRule: function insertRule(content) {\n          var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          this.cssRules.splice(index, 0, content);\n        }\n      });\n      return aggr;\n    }, {})\n  };\n};\nvar specificityProps = {\n  border: border,\n  boxShadow: boxShadow,\n  flex: function flex(tokens, value) {\n    if (Array.isArray(value)) {\n      if (value.length === 2) {\n        return _objectSpread({\n          flexGrow: value[0]\n        }, isNaN(value[1]) ? {\n          flexBasis: value[1]\n        } : {\n          flexShrink: value[1]\n        });\n      }\n\n      if (value.length === 3) {\n        return {\n          flexGrow: value[0],\n          flexShrink: value[1],\n          flexBasis: value[2]\n        };\n      }\n    }\n\n    return isNaN(value) ? {\n      flexBasis: value\n    } : {\n      flexGrow: value\n    };\n  },\n  overflow: function overflow(tokens, value) {\n    return {\n      overflowX: value,\n      overflowY: value\n    };\n  },\n  margin: margin,\n  padding: padding,\n  borderRadius: borderRadius,\n  borderColor: borderColor,\n  borderStyle: borderStyle,\n  borderWidth: borderWidth,\n  background: background,\n  animation: animation,\n  transition: transition,\n  font: font,\n  borderBottom: borderBottom,\n  borderLeft: borderLeft,\n  borderTop: borderTop,\n  borderRight: borderRight\n};\nvar getVendorPrefixAndProps = function getVendorPrefixAndProps(env) {\n  var styles = env.getComputedStyle(env.document.documentElement);\n  var vendorProps = Array.from(styles).filter(function (prop) {\n    return prop[0] === '-';\n  }); // @ts-ignore\n\n  var vendorPrefix = (vendorProps.join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n  return {\n    vendorPrefix: \"-\".concat(vendorPrefix, \"-\"),\n    vendorProps: vendorProps\n  };\n};\nvar hashString = function hashString(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n\n\n  return generateAlphabeticName(hash >>> 0);\n};\n/**\n * Converts a hash number to alphabetic representation:\n * Copied from:\n * https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/generateAlphabeticName.js\n */\n\nvar AD_REPLACER_R = /(a)(d)/gi;\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\n\nvar charsLength = 52;\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\n\nvar getAlphabeticChar = function getAlphabeticChar(code) {\n  return String.fromCharCode(code + (code > 25 ? 39 : 97));\n};\n/* input a number, usually a hash and convert it to base-52 */\n\n\nfunction generateAlphabeticName(code) {\n  var name = '';\n  var x;\n  /* get a char and divide by alphabet-length */\n\n  for (x = Math.abs(code); x > charsLength; x = x / charsLength | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(AD_REPLACER_R, '$1-$2');\n}\n\nfunction _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest$1(); }\n\nfunction _nonIterableRest$1() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit$1(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles$1(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$1(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$1(arr); }\n\nfunction _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\nvar _ATOM = ATOM;\nvar hotReloadingCache = new Map();\n\nvar cleanSSRClass = function cleanSSRClass(s) {\n  // removes the atom class marker & removes any escaping that was done on the server for the class\n  return s.replace(/(\\/\\*X\\*\\/|\\\\([^-_a-zA-Z\\d]*))/g, '$2');\n};\n\nvar createSSRCssRuleClass = function createSSRCssRuleClass(s) {\n  return \"/*X*/\".concat(s.replace(/[^-_a-zA-Z\\d]/g, \"\\\\$&\"), \"/*X*/\");\n};\n\nvar createSelector = function createSelector(className, selector) {\n  var cssRuleClassName = className ? \".\".concat(className) : '';\n  if (selector && selector.includes('&')) return selector.replace(/&/gi, cssRuleClassName);\n\n  if (selector) {\n    return \"\".concat(cssRuleClassName).concat(selector);\n  }\n\n  return cssRuleClassName;\n};\n/**\n * Resolves a token to its css value in the context of the passed css prop:\n */\n\n\nvar resolveTokens = function resolveTokens(cssProp, value, tokens) {\n  var token = cssPropToToken[cssProp];\n  var tokenValue;\n\n  if (token) {\n    if (Array.isArray(token) && Array.isArray(value)) {\n      tokenValue = token.map(function (tokenName, index) {\n        return token && tokens[tokenName] && tokens[tokenName][value[index]] ? tokens[tokenName][value[index]] : value[index];\n      });\n    } else {\n      tokenValue = token && tokens[token] && tokens[token][value] ? tokens[token][value] : value;\n    }\n  } else {\n    tokenValue = value;\n  }\n\n  return tokenValue;\n};\n/**\n * iterates over a style object keys and values,\n * resolving them to their final form then calls the value callback with the prop, value\n * and the current value nesting path in the style object:\n * - handles utilities\n * - handles specificity props\n * - handles nesting\n * - TODO: also handle the things below once we handle envs differently (to avoid passing a lot of props around):\n * - handles tokens\n * - handles vendor prefixing\n */\n\n\nvar processStyleObject = function processStyleObject(obj, config, valueMiddleware) {\n  var currentNestingPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var shouldHandleUtils = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  var shouldHandleSpecificityProps = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n\n  // key: css prop or override or a selector\n  // value is: cssValue, a util, specificity prop, or\n  for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var val = obj[key];\n    var isUtilProp = shouldHandleUtils && key in config.utils;\n    var isSpecificityProp = shouldHandleSpecificityProps && !isUtilProp && key in specificityProps;\n    /** Nested styles: */\n\n    if (_typeof(val) === 'object' && !isSpecificityProp && !isUtilProp) {\n      // Atom value:\n      if (val[ATOM]) {\n        valueMiddleware(key, val, currentNestingPath);\n        continue;\n      } // handle the value object\n\n\n      processStyleObject(val, config, valueMiddleware, [].concat(_toConsumableArray(currentNestingPath), [key]));\n      continue;\n    }\n    /** Utils: */\n\n\n    if (isUtilProp) {\n      // Resolve the util from the util function:\n      var resolvedUtils = config.utils[key](config)(val);\n      processStyleObject(resolvedUtils, config, valueMiddleware, _toConsumableArray(currentNestingPath), false);\n      continue;\n    }\n    /** Specificity Props: */\n    // shorthand css props or css props that has baked in handling:\n    // see specificityProps in ./utils\n\n\n    if (isSpecificityProp) {\n      var resolvedSpecificityProps = specificityProps[key](config.tokens, val);\n      processStyleObject(resolvedSpecificityProps, config, valueMiddleware, _toConsumableArray(currentNestingPath), false, false);\n      continue;\n    }\n\n    if (typeof val === 'number') {\n      // handle unitless numbers:\n      valueMiddleware(key, // tslint:disable-next-line: prefer-template\n      \"\".concat(unitlessKeys[key] ? val : val + 'px'), currentNestingPath);\n    } else if (val !== undefined) {\n      valueMiddleware(key, resolveTokens(key, val, config.tokens), currentNestingPath);\n    }\n  }\n};\n/**\n * Resolves a css prop nesting path to a css selector and the breakpoint the css prop is meant to be injected to\n */\n\n\nvar resolveBreakpointAndSelectorAndInlineMedia = function resolveBreakpointAndSelectorAndInlineMedia(nestingPath, config) {\n  return nestingPath.reduce(function (acc, breakpointOrSelector, i) {\n    // breakpoints handling:\n    if (breakpointOrSelector in config.breakpoints || breakpointOrSelector === MAIN_BREAKPOINT_ID) {\n      acc.breakpoint = breakpointOrSelector;\n      return acc;\n    }\n\n    if (breakpointOrSelector[0] === '@') {\n      acc.inlineMediaQueries.push(breakpointOrSelector);\n      return acc;\n    } // Normal css nesting selector:\n\n\n    acc.nestingPath = acc.nestingPath + ( // If you manually prefix with '&' we remove it for identity consistency\n    // only for pseudo selectors and nothing else\n    breakpointOrSelector[0] === '&' && breakpointOrSelector[1] === ':' ? breakpointOrSelector.substr(1) : // pseudo elements/class\n    // don't prepend with a whitespace\n    breakpointOrSelector[0] === ':' ? breakpointOrSelector : // else just nest with a space\n    // tslint:disable-next-line: prefer-template\n    ' ' + breakpointOrSelector);\n    return acc;\n  }, {\n    breakpoint: MAIN_BREAKPOINT_ID,\n    nestingPath: '',\n    inlineMediaQueries: []\n  });\n};\n/**\n * converts an object style css prop to its normal css style object prop and handles prefixing:\n * borderColor => border-color\n */\n\n\nvar hyphenAndVendorPrefixCssProp = function hyphenAndVendorPrefixCssProp(cssProp, vendorProps, vendorPrefix) {\n  var isVendorPrefixed = cssProp[0] === cssProp[0].toUpperCase();\n  var cssHyphenProp = cssProp.split(/(?=[A-Z])/).map(function (g) {\n    return g.toLowerCase();\n  }).join('-');\n\n  if (isVendorPrefixed) {\n    cssHyphenProp = \"-\".concat(cssHyphenProp);\n  } else if (vendorProps.includes(\"\".concat(vendorPrefix).concat(cssHyphenProp))) {\n    cssHyphenProp = \"\".concat(vendorPrefix).concat(cssHyphenProp);\n  }\n\n  return cssHyphenProp;\n};\n\nvar toStringCachedAtom = function toStringCachedAtom() {\n  return this._className;\n};\n\nvar toStringCompose = function toStringCompose() {\n  var className = this.atoms.map(function (atom) {\n    return atom.toString();\n  }).join(' '); // cache the className on this instance\n  // @ts-ignore\n\n  this._className = className; // we only want to enable caching on the client\n  // because on the server we want to make sure that the composition is evaluated on each request\n\n  if (!isServer) {\n    this.toString = toStringCachedAtom;\n  }\n\n  return className;\n};\n\nvar createCssRule = function createCssRule(breakpoints, atom, className) {\n  var cssRule = '';\n\n  if (atom.inlineMediaQueries && atom.inlineMediaQueries.length) {\n    var allMediaQueries = '';\n    var endBrackets = '';\n    atom.inlineMediaQueries.forEach(function (breakpoint) {\n      allMediaQueries += \"\".concat(breakpoint, \"{\");\n      endBrackets += '}';\n    });\n    cssRule = \"\".concat(allMediaQueries).concat(createSelector(className, atom.selector), \"{\").concat(atom.cssHyphenProp, \":\").concat(atom.value, \";}\").concat(endBrackets);\n  } else {\n    cssRule = \"\".concat(createSelector(className, atom.selector), \"{\").concat(atom.cssHyphenProp, \":\").concat(atom.value, \";}\");\n  }\n\n  return atom.breakpoint !== MAIN_BREAKPOINT_ID ? breakpoints[atom.breakpoint](cssRule) : cssRule;\n};\n\nvar createToString = function createToString(sheets) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cssClassnameProvider = arguments.length > 2 ? arguments[2] : undefined;\n  var preInjectedRules = arguments.length > 3 ? arguments[3] : undefined;\n  return function toString() {\n    var className = cssClassnameProvider(this);\n    var shouldInject = !preInjectedRules.size || !preInjectedRules.has(\".\".concat(className));\n\n    if (shouldInject) {\n      var sheet = sheets[this.breakpoint];\n      sheet.insertRule(createCssRule(breakpoints, this, className), this.inlineMediaQueries.length ? sheet.cssRules.length : 0);\n    } // We are switching this atom from IAtom simpler representation\n    // 1. delete everything but `id` for specificity check\n    // @ts-ignore\n\n\n    this.cssHyphenProp = this.value = this.pseudo = this.breakpoint = this.inlineMediaQueries = undefined; // 2. put on a _className\n\n    this._className = className; // 3. switch from this `toString` to a much simpler one\n\n    this.toString = toStringCachedAtom;\n    return className;\n  };\n};\n\nvar createServerToString = function createServerToString(sheets) {\n  var breakpoints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cssClassnameProvider = arguments.length > 2 ? arguments[2] : undefined;\n  return function toString() {\n    var className = cssClassnameProvider(this);\n    var sheet = sheets[this.breakpoint];\n    sheets[this.breakpoint].insertRule(createCssRule(breakpoints, this, className.length ? createSSRCssRuleClass(className) : ''), this.inlineMediaQueries.length ? sheet.cssRules.length : 0); // We do not clean out the atom here, cause it will be reused\n    // to inject multiple times for each request\n    // 1. put on a _className\n\n    this._className = className; // 2. switch from this `toString` to a much simpler one\n\n    this.toString = toStringCachedAtom;\n    return className;\n  };\n};\n\nvar createThemeToString = function createThemeToString(classPrefix, variablesSheet) {\n  return function toString() {\n    var _this = this;\n\n    var themeClassName = \"\".concat(classPrefix ? \"\".concat(classPrefix, \"-\") : '', \"theme-\").concat(this.name); // @ts-ignore\n\n    variablesSheet.insertRule(\".\".concat(themeClassName, \"{\").concat(Object.keys(this.definition).reduce(function (aggr, tokenType) {\n      // @ts-ignore\n      return \"\".concat(aggr).concat(Object.keys(_this.definition[tokenType]).reduce(function (subAggr, tokenKey) {\n        return \"\".concat(subAggr, \"--\").concat(tokenType, \"-\").concat(tokenKey.replace(/[^\\w\\s-]/gi, ''), \":\").concat( // @ts-ignore\n        _this.definition[tokenType][tokenKey], \";\");\n      }, aggr));\n    }, ''), \"}\"));\n\n    this.toString = function () {\n      return themeClassName;\n    };\n\n    return themeClassName;\n  };\n};\n\nvar createKeyframesToString = function createKeyframesToString(sheet) {\n  return function toString() {\n    var _this2 = this;\n\n    if (this._cssRuleString) {\n      sheet.insertRule(this._cssRuleString);\n    }\n\n    this.toString = function () {\n      return _this2.id;\n    };\n\n    return this.id;\n  };\n};\n\nvar composeIntoMap = function composeIntoMap(map, atoms) {\n  var i = atoms.length - 1;\n\n  for (; i >= 0; i--) {\n    var item = atoms[i]; // atoms can be undefined, null, false or '' using ternary like\n    // expressions with the properties\n\n    if (item && item[ATOM] && 'atoms' in item) {\n      composeIntoMap(map, item.atoms);\n    } else if (item && item[ATOM]) {\n      if (!map.has(item.id)) {\n        map.set(item.id, item);\n      }\n    } else if (item) {\n      map.set(item, item);\n    }\n  }\n};\n\nvar createTokens = function createTokens(tokens) {\n  return tokens;\n};\nvar createCss = function createCss(_config) {\n  var env = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : typeof window === 'undefined' ? null : window;\n  // pre-checked config to avoid checking these all the time\n  // tslint:disable-next-line\n  var config = Object.assign({\n    tokens: {},\n    utils: {},\n    breakpoints: {}\n  }, _config); // prefill with empty token groups\n\n  tokenTypes.forEach(function (tokenType) {\n    return config.tokens[tokenType] = config.tokens[tokenType] || {};\n  });\n  var tokens = config.tokens,\n      breakpoints = config.breakpoints;\n  var showFriendlyClassnames = typeof config.showFriendlyClassnames === 'boolean' ? config.showFriendlyClassnames : \"development\" === 'development';\n  var prefix = config.prefix || '';\n\n  var _ref = env ? getVendorPrefixAndProps(env) : {\n    vendorPrefix: '-node-',\n    vendorProps: []\n  },\n      vendorPrefix = _ref.vendorPrefix,\n      vendorProps = _ref.vendorProps;\n\n  if (env && hotReloadingCache.has(prefix)) {\n    var instance = hotReloadingCache.get(prefix);\n    instance.dispose();\n  } // pre-compute class prefix\n\n\n  var classPrefix = prefix ? showFriendlyClassnames ? \"\".concat(prefix, \"_\") : prefix : '';\n\n  var cssClassnameProvider = function cssClassnameProvider(atom) {\n    var _atom$inlineMediaQuer;\n\n    if (atom._isGlobal) {\n      return '';\n    }\n\n    var hash = hashString(\"\".concat(atom.breakpoint || '').concat(atom.cssHyphenProp.replace(/-(moz|webkit|ms)-/, '')).concat(atom.selector || '').concat(((_atom$inlineMediaQuer = atom.inlineMediaQueries) === null || _atom$inlineMediaQuer === void 0 ? void 0 : _atom$inlineMediaQuer.join('')) || '').concat(atom.value));\n    var name = showFriendlyClassnames ? // HTML has this weird treatment to css classes. it's ok if they start with everything except digits\n    // where in CSS a class can only start with an underscore (_), a hyphen (-) or a letter (a-z)/(A-Z)\n    // so we're prefixing the breakpoint with _ incase the user sets an invalid character at the start of the string\n    \"\".concat(atom.breakpoint ? \"_\".concat(atom.breakpoint, \"_\") : '').concat(atom.cssHyphenProp.replace(/-(moz|webkit|ms)-/, '').split('-').map(function (part) {\n      return part[0];\n    }).join(''), \"_\").concat(hash) : \"_\".concat(hash);\n    return \"\".concat(classPrefix).concat(name);\n  };\n\n  var _createSheets = createSheets(env, config.breakpoints),\n      tags = _createSheets.tags,\n      sheets = _createSheets.sheets;\n\n  var preInjectedRules = new Set(); // tslint:disable-next-line\n\n  var _iterator = _createForOfIteratorHelper(tags),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var tag = _step.value;\n      ((tag.textContent || '').match(/\\/\\*\\X\\*\\/.*?\\/\\*\\X\\*\\//g) || []).forEach(function (rule) {\n        // tslint:disable-next-line\n        preInjectedRules.add('.' + cleanSSRClass(rule));\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var toString = env ? createToString(sheets, config.breakpoints, cssClassnameProvider, preInjectedRules) : createServerToString(sheets, config.breakpoints, cssClassnameProvider);\n  var themeToString = createThemeToString(classPrefix, sheets.__variables__);\n  var keyframesToString = createKeyframesToString(sheets[MAIN_BREAKPOINT_ID]);\n\n  var compose = function compose() {\n    var map = new Map();\n\n    for (var _len = arguments.length, atoms = new Array(_len), _key = 0; _key < _len; _key++) {\n      atoms[_key] = arguments[_key];\n    }\n\n    composeIntoMap(map, atoms);\n    return _defineProperty$1({\n      atoms: Array.from(map.values()),\n      toString: toStringCompose\n    }, ATOM, true);\n  };\n\n  var createAtom = function createAtom(cssProp, value) {\n    var _selectorString, _atom;\n\n    var breakpoint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : MAIN_BREAKPOINT_ID;\n    var selectorString = arguments.length > 3 ? arguments[3] : undefined;\n    var inlineMediaQueries = arguments.length > 4 ? arguments[4] : undefined;\n    var isGlobal = arguments.length > 5 ? arguments[5] : undefined;\n    // generate id used for specificity check\n    // two atoms are considered equal in regard to there specificity if the id is equal\n    var inlineMediasAsString = inlineMediaQueries ? inlineMediaQueries.join('') : '';\n    var id = cssProp.toLowerCase() + selectorString + (inlineMediaQueries ? inlineMediaQueries.join('') : '') + breakpoint; // make a uid accouting for different values\n\n    var uid = id + value; // If this was created before return the cached atom\n\n    if (atomCache.has(uid)) {\n      // check if this has a breakpoint based media query\n      if (inlineMediasAsString.match(/@media.*\\((min|max)?.*(width|height).*\\)/)) {\n        // tslint:disable-next-line\n        console.warn(\"The property \\\"\".concat(cssProp, \"\\\" with media query \").concat(inlineMediasAsString, \" can cause a specificity issue. You should create a breakpoint\"));\n      }\n\n      return atomCache.get(uid);\n    } // prepare the cssProp\n\n\n    var cssHyphenProp = hyphenAndVendorPrefixCssProp(cssProp, vendorProps, vendorPrefix); // We want certain pseudo selectors to take presedence over other pseudo\n    // selectors, so we increase specificity\n\n    if (!((_selectorString = selectorString) === null || _selectorString === void 0 ? void 0 : _selectorString.match('&'))) {\n      var _selectorString2, _selectorString3, _selectorString4, _selectorString5, _selectorString6;\n\n      if ((_selectorString2 = selectorString) === null || _selectorString2 === void 0 ? void 0 : _selectorString2.match(/\\:hover/)) {\n        selectorString = \"&&\".concat(selectorString);\n      } else if ((_selectorString3 = selectorString) === null || _selectorString3 === void 0 ? void 0 : _selectorString3.match(/\\:active/)) {\n        selectorString = \"&&&\".concat(selectorString);\n      } else if ((_selectorString4 = selectorString) === null || _selectorString4 === void 0 ? void 0 : _selectorString4.match(/\\:focus|\\:focus-visible/)) {\n        selectorString = \"&&&&\".concat(selectorString);\n      } else if ((_selectorString5 = selectorString) === null || _selectorString5 === void 0 ? void 0 : _selectorString5.match(/\\:read-only/)) {\n        selectorString = \"&&&&&\".concat(selectorString);\n      } else if ((_selectorString6 = selectorString) === null || _selectorString6 === void 0 ? void 0 : _selectorString6.match(/\\:disabled/)) {\n        selectorString = \"&&&&&&\".concat(selectorString);\n      }\n    } // Create a new atom\n\n\n    var atom = (_atom = {\n      id: id,\n      cssHyphenProp: cssHyphenProp,\n      value: value,\n      selector: selectorString,\n      inlineMediaQueries: inlineMediaQueries,\n      breakpoint: breakpoint,\n      toString: toString\n    }, _defineProperty$1(_atom, ATOM, true), _defineProperty$1(_atom, \"_isGlobal\", isGlobal), _atom); // Cache it\n\n    atomCache.set(uid, atom);\n    return atom;\n  };\n\n  var baseTokens = ':root{'; // tslint:disable-next-line\n\n  for (var tokenType in tokens) {\n    var isNumericScale = tokenType.match(/^(sizes|space|letterSpacings|zIndices)$/); // @ts-ignore\n    // tslint:disable-next-line\n\n    var scaleTokenKeys = Object.keys(tokens[tokenType]);\n\n    for (var index = 0; index < scaleTokenKeys.length; index++) {\n      var token = scaleTokenKeys[index]; // format token to remove special characters\n      // https://stackoverflow.com/a/4374890\n\n      var formattedToken = token.replace(/[^\\w\\s-]/gi, '');\n      var cssVar = \"--\".concat(tokenType, \"-\").concat(formattedToken); // @ts-ignore\n\n      baseTokens += \"\".concat(cssVar, \":\").concat(tokens[tokenType][token], \";\"); // @ts-ignore\n\n      tokens[tokenType][token] = \"var(\".concat(cssVar, \")\"); // Add negative tokens\n      // tslint:disable-next-line: prefer-template\n\n      var negativeTokenKey = '-' + token; // check that it's a numericScale and that the user didn't already set a negative token witht this name\n\n      var isAlreadyANegativeToken = // @ts-ignore\n      token[0] === '-' ? !!tokens[tokenType][token.substring(1)] : false;\n\n      if (isNumericScale && // @ts-ignore\n      !tokens[tokenType][negativeTokenKey] && !isAlreadyANegativeToken) {\n        // @ts-ignore\n        tokens[tokenType][negativeTokenKey] = \"calc(var(\".concat(cssVar, \") * -1)\");\n      }\n    }\n  }\n\n  baseTokens += '}';\n\n  if (!preInjectedRules.has(':root')) {\n    sheets.__variables__.insertRule(baseTokens);\n  } // Keeping track of all atoms for SSR\n\n\n  var atomCache = new Map();\n  var keyFramesCache = new Map();\n  var themeCache = new Map();\n\n  var cssInstance = function cssInstance() {\n    var args = [];\n    var index = 0;\n\n    for (var _len2 = arguments.length, definitions = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      definitions[_key2] = arguments[_key2];\n    }\n\n    for (var x = 0; x < definitions.length; x++) {\n      if (!definitions[x]) {\n        continue;\n      }\n\n      if (typeof definitions[x] === 'string' || definitions[x][ATOM]) {\n        args[index++] = definitions[x];\n      } else {\n        processStyleObject(definitions[x], config, function (prop, value, path) {\n          var _resolveBreakpointAnd = resolveBreakpointAndSelectorAndInlineMedia(path, config),\n              nestingPath = _resolveBreakpointAnd.nestingPath,\n              breakpoint = _resolveBreakpointAnd.breakpoint,\n              inlineMediaQueries = _resolveBreakpointAnd.inlineMediaQueries;\n\n          args[index++] = createAtom(prop, value, breakpoint, nestingPath, inlineMediaQueries);\n        });\n      }\n    } // might cause memory leaks when doing css() inside a component\n    // but we need this for now to fix SSR\n\n\n    var composition = compose.apply(void 0, args);\n    return composition;\n  };\n\n  cssInstance.dispose = function () {\n    atomCache.clear();\n    tags.forEach(function (tag) {\n      var _tag$parentNode;\n\n      (_tag$parentNode = tag.parentNode) === null || _tag$parentNode === void 0 ? void 0 : _tag$parentNode.removeChild(tag);\n    });\n  };\n\n  cssInstance._config = function () {\n    return config;\n  };\n\n  cssInstance.theme = function (definition) {\n    if (themeCache.has(definition)) {\n      return themeCache.get(definition);\n    }\n\n    var themeAtom = _defineProperty$1({\n      // We could here also check if theme has been added from server,\n      // though thinking it does not matter... just a simple rule\n      name: String(themeCache.size),\n      definition: definition,\n      toString: themeToString\n    }, ATOM, true);\n\n    themeCache.set(definition, themeAtom);\n    return themeAtom;\n  };\n\n  cssInstance.global = function (definitions) {\n    processStyleObject(definitions, config, function (prop, value, path) {\n      var _resolveBreakpointAnd2 = resolveBreakpointAndSelectorAndInlineMedia(path, config),\n          nestingPath = _resolveBreakpointAnd2.nestingPath,\n          breakpoint = _resolveBreakpointAnd2.breakpoint,\n          inlineMediaQueries = _resolveBreakpointAnd2.inlineMediaQueries;\n\n      if (!nestingPath.length) {\n        throw new Error('Global styles need to be nested');\n      } // Create a global atom and call toString() on it directly to inject it\n      // as global atoms don't generate class names of their own\n\n\n      createAtom(prop, value, breakpoint, nestingPath, inlineMediaQueries, true).toString();\n    });\n  };\n\n  cssInstance.keyframes = function (definition) {\n    var cssRule = '';\n    var currentTimeProp = '';\n    processStyleObject(definition, config, function (key, value, _ref3) {\n      var _ref4 = _slicedToArray$1(_ref3, 1),\n          timeProp = _ref4[0];\n\n      if (timeProp !== currentTimeProp) {\n        if (cssRule) {\n          cssRule += \"}\";\n        }\n\n        currentTimeProp = timeProp;\n        cssRule += \"\".concat(timeProp, \" {\");\n      }\n\n      cssRule += \"\".concat(hyphenAndVendorPrefixCssProp(key, vendorProps, vendorPrefix), \": \").concat(resolveTokens(key, value, tokens), \";\");\n    });\n    var hash = hashString(cssRule); // Check if an atom exist with the same hash and return it if so\n\n    var cachedAtom = keyFramesCache.get(hash);\n\n    if (cachedAtom) {\n      return cachedAtom;\n    } // wrap it with the generated keyframes name\n\n\n    cssRule = \"@keyframes \".concat(hash, \" {\").concat(cssRule, \"}\");\n\n    var keyframesAtom = _defineProperty$1({\n      id: String(hash),\n      _cssRuleString: cssRule,\n      toString: keyframesToString\n    }, ATOM, true);\n\n    keyFramesCache.set(hash, keyframesAtom);\n    return keyframesAtom;\n  };\n\n  cssInstance.getStyles = function (cb) {\n    // tslint:disable-next-line\n    for (var sheet in sheets) {\n      sheets[sheet].cssRules.length = 0;\n    }\n\n    if (baseTokens) {\n      sheets.__variables__.insertRule(baseTokens);\n    } // We have to reset our toStrings so that they will now inject again,\n    // and still cache is it is being reused\n\n\n    toString = createServerToString(sheets, config.breakpoints, cssClassnameProvider);\n    keyframesToString = createKeyframesToString(sheets[MAIN_BREAKPOINT_ID]);\n    themeToString = createThemeToString(classPrefix, sheets.__variables__);\n    atomCache.forEach(function (atom) {\n      atom.toString = toString;\n    });\n    keyFramesCache.forEach(function (atom) {\n      atom.toString = keyframesToString;\n    });\n    themeCache.forEach(function (atom) {\n      atom.toString = themeToString;\n    });\n    var result = cb();\n    return {\n      result: result,\n      styles: Object.keys(breakpoints).reduce(function (aggr, key) {\n        return aggr.concat(\"/* STITCHES:\".concat(key, \" */\\n\").concat(sheets[key].cssRules.join('\\n')));\n      }, [\"/* STITCHES:__variables__ */\\n\".concat(sheets.__variables__.cssRules.join('\\n')), \"/* STITCHES */\\n\".concat(sheets[MAIN_BREAKPOINT_ID].cssRules.join('\\n'))])\n    };\n  };\n\n  if (env) {\n    hotReloadingCache.set(prefix, cssInstance);\n  }\n\n  return cssInstance;\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@stitches/core/dist/core.esm.js\n");

/***/ }),

/***/ "./node_modules/@stitches/react/dist/react.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/@stitches/react/dist/react.esm.js ***!
  \********************************************************/
/*! exports provided: _ATOM, createStyled */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStyled\", function() { return createStyled; });\n/* harmony import */ var _stitches_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stitches/core */ \"./node_modules/@stitches/core/dist/core.esm.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_ATOM\", function() { return _stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"_ATOM\"]; });\n\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar hasWarnedInlineStyle = false;\n\nvar createCompoundVariantsMatcher = function createCompoundVariantsMatcher(breakPoints, existingMap) {\n  var map = new Map();\n  map.set(_stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"MAIN_BREAKPOINT_ID\"], _toConsumableArray((existingMap === null || existingMap === void 0 ? void 0 : existingMap.get(_stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"MAIN_BREAKPOINT_ID\"])) || []));\n  Object.keys(breakPoints).forEach(function (breakpoint) {\n    return map.set(breakpoint, _toConsumableArray((existingMap === null || existingMap === void 0 ? void 0 : existingMap.get(breakpoint)) || []));\n  });\n  return map;\n};\n\nvar createStyled = function createStyled(config) {\n  var css = Object(_stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"createCss\"])(config);\n  var defaultElement = 'div';\n  var Box = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(function (props, ref) {\n    var Element = props.as || defaultElement;\n    return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Element, _objectSpread(_objectSpread({\n      ref: ref\n    }, props), {}, {\n      as: undefined\n    }));\n  });\n  var currentAs;\n  var configBreakpoints = config.breakpoints || {};\n\n  var styledInstance = function styledInstance() {\n    var baseAndVariantStyles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (cssComposer) {\n      return cssComposer.compose();\n    };\n    var Component = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Box;\n    var numberOfCompoundVariants = 0;\n    var as = currentAs;\n\n    var _baseAndVariantStyles = baseAndVariantStyles.variants,\n        variants = _baseAndVariantStyles === void 0 ? {} : _baseAndVariantStyles,\n        base = _objectWithoutProperties(baseAndVariantStyles, [\"variants\"]);\n\n    var baseStyles = css(base); // compound s vars & constants:\n    // keep track of all compound variants:\n\n    var compoundVariants = []; // a map that keeps track of the required number of matching s left for each break point:\n\n    var requiredMatches = createCompoundVariantsMatcher(configBreakpoints); // keep track of the number of available variants\n\n    var evaluatedVariantMap = new Map(); // store pre evaluated variants\n\n    var evaluatedCompoundVariants = new Map(); // tslint:disable-next-line: forin\n\n    for (var Name in variants) {\n      var variantMap = new Map(); // tslint:disable-next-line: forin\n\n      for (var ValueName in variants[Name]) {\n        var evaluatedStyles = evaluateStylesForAllBreakpoints(variants[Name][ValueName], configBreakpoints, css);\n        variantMap.set(ValueName, evaluatedStyles);\n      }\n\n      evaluatedVariantMap.set(Name, variantMap);\n    }\n\n    var stitchesComponentId = \"scid-\".concat(Object(_stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"hashString\"])(JSON.stringify(baseAndVariantStyles)));\n    var StitchesComponent = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"forwardRef\"])(function (props, ref) {\n      // Check the memoCompsition's identity to warn the user\n      // remove in production\n      if (true) {\n        // we're breaking the rules of hooks on purpose as the env will never change\n        // eslint-disable-next-line\n        var memoStyled = Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useMemo\"])(function () {\n          return props.css;\n        }, []); // We want this to only eval once\n\n        if (memoStyled !== props.css && !hasWarnedInlineStyle) {\n          // tslint:disable-next-line\n          console.warn('@stitches/react : The css prop should ideally not be dynamic. Define it outside your component using the css composer, or use a memo hook');\n          hasWarnedInlineStyle = true;\n        }\n      }\n\n      var compositions = [baseStyles];\n      var propsWithoutVariantsAndCssProp = {}; // clone the compound s matcher\n\n      var compoundRequiredMatches = createCompoundVariantsMatcher(configBreakpoints, requiredMatches); // keep track of the number of unResolved s so that we could bail early:\n\n      var numberOfUnResolvedCompoundVariants = {\n        current: numberOfCompoundVariants\n      };\n\n      var _loop = function _loop(_key) {\n        // check if the prop is a variant\n        if (_key in variants) {\n          (function () {\n            var evaluatedVariant = evaluatedVariantMap.get(_key); // normalize the value so that we only have to deal with one structure:\n\n            var keyVal = props[_key] && _typeof(props[_key]) !== 'object' ? _defineProperty({}, _stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"MAIN_BREAKPOINT_ID\"], props[_key]) : props[_key]; // tslint:disable-next-line: forin\n\n            var _loop2 = function _loop2(breakpoint) {\n              // check if the variant exist for this breakpoint\n              if (keyVal[breakpoint] && evaluatedVariant && evaluatedVariant.get(String(keyVal[breakpoint]))) {\n                var _evaluatedVariant$get;\n\n                compositions.push((_evaluatedVariant$get = evaluatedVariant.get(String(keyVal[breakpoint]))) === null || _evaluatedVariant$get === void 0 ? void 0 : _evaluatedVariant$get[breakpoint]);\n              }\n              /** Compound variants: */\n\n\n              if (numberOfUnResolvedCompoundVariants.current) {\n                compoundVariants.forEach(function (compoundVariant, i) {\n                  // if this breakpoint  matches a compound\n                  // eslint-disable-next-line\n                  if (String(keyVal[breakpoint]) === String(compoundVariant[_key])) {\n                    compoundRequiredMatches.get(breakpoint)[i]--;\n                  } // when the required matches reach 0 for any compound ...\n                  // we know we have a matched compoundVariant\n\n\n                  if (compoundRequiredMatches.get(breakpoint)[i] === 0) {\n                    var _evaluatedCompoundVar;\n\n                    numberOfUnResolvedCompoundVariants.current--;\n                    compositions.push((_evaluatedCompoundVar = evaluatedCompoundVariants.get(compoundVariant)) === null || _evaluatedCompoundVar === void 0 ? void 0 : _evaluatedCompoundVar[breakpoint]);\n                  }\n                });\n              }\n              /** End compound variants */\n\n            };\n\n            for (var breakpoint in keyVal) {\n              _loop2(breakpoint);\n            }\n          })();\n        } else {\n          propsWithoutVariantsAndCssProp[_key] = props[_key];\n        }\n      };\n\n      for (var _key in props) {\n        _loop(_key);\n      }\n\n      if (propsWithoutVariantsAndCssProp.css) {\n        compositions.push(propsWithoutVariantsAndCssProp.css);\n        propsWithoutVariantsAndCssProp.css = undefined;\n      }\n\n      return Object(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"])(Component, _objectSpread(_objectSpread({}, propsWithoutVariantsAndCssProp), {}, {\n        as: props.as || as,\n        ref: ref,\n        className: css.apply(void 0, [stitchesComponentId].concat(compositions, [props.className]))\n      }));\n    });\n    StitchesComponent.displayName = typeof currentAs === 'string' ? \"styled(\".concat(currentAs, \")\") : Component && Component.displayName ? \"styled(\".concat(Component.displayName, \")\") : \"styled(Component)\";\n\n    StitchesComponent.toString = function () {\n      return \".\".concat(stitchesComponentId);\n    };\n\n    StitchesComponent.compoundVariant = function (compundVariantsObject, compoundVariantStyles) {\n      // Update component level variables:\n      numberOfCompoundVariants++; // Each time we add\n\n      compoundVariants.push(compundVariantsObject); // required matches is a map with breakpoints\n      // each time we add a compound variant, we also push its length to\n      // all of the breakpoints so:\n      // requiredMatches.get(breakpoint)[i] === Object.keys(compoundVariants[i]).length\n      // at render time we clone the requiredMatches map and whenever a prop matches a compound variant we decrement\n      // the required matches for this compound variant at this breakpoint\n      // when the required matches hit 0 we know it's a mtach\n\n      requiredMatches.forEach(function (value, key) {\n        value.push(Object.keys(compundVariantsObject).length);\n      });\n      var evaluatedStyles = evaluateStylesForAllBreakpoints(compoundVariantStyles, configBreakpoints, css);\n      evaluatedCompoundVariants.set(compundVariantsObject, evaluatedStyles);\n      return StitchesComponent;\n    };\n\n    return StitchesComponent;\n  }; // tslint:disable-next-line\n\n\n  var styledProxy = new Proxy(function () {}, {\n    get: function get(_, prop) {\n      if (prop === 'Box') {\n        return Box;\n      }\n\n      currentAs = String(prop);\n      return styledInstance;\n    },\n    apply: function apply(_, __, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          Element = _ref3[0],\n          styling = _ref3[1];\n\n      if (typeof Element === 'string') {\n        currentAs = Element;\n        return styledInstance(styling);\n      }\n\n      currentAs = undefined;\n      return styledInstance(styling, Element);\n    }\n  });\n  return {\n    styled: styledProxy,\n    css: css\n  };\n};\n\nfunction evaluateStylesForAllBreakpoints(styleObject, configBreakpoints, css) {\n  var breakpoints = _defineProperty({}, _stitches_core__WEBPACK_IMPORTED_MODULE_0__[\"MAIN_BREAKPOINT_ID\"], css(styleObject));\n\n  if (configBreakpoints) {\n    // tslint:disable-next-line\n    for (var breakpoint in configBreakpoints) {\n      breakpoints[breakpoint] = css(_defineProperty({}, breakpoint, styleObject));\n    }\n  }\n\n  return breakpoints;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@stitches/react/dist/react.esm.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var assign=Object.assign.bind(Object);module.exports=assign;module.exports.default=module.exports;\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9wb2x5ZmlsbHMvb2JqZWN0LWFzc2lnbi5qcz80MWViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhLHNDQUFzQyxzQkFBc0I7QUFDekUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7dmFyIGFzc2lnbj1PYmplY3QuYXNzaWduLmJpbmQoT2JqZWN0KTttb2R1bGUuZXhwb3J0cz1hc3NpZ247bW9kdWxlLmV4cG9ydHMuZGVmYXVsdD1tb2R1bGUuZXhwb3J0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC1hc3NpZ24uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/object-assign.js\n");

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2Fhome%2Fmarsa%2FDocumentos%2FGithub%2Fportfolio%2Fsrc%2Fpages%2Findex.tsx!./":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2Fhome%2Fmarsa%2FDocumentos%2FGithub%2Fportfolio%2Fsrc%2Fpages%2Findex.tsx ***!
  \****************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\n      }\n    ]);\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1jbGllbnQtcGFnZXMtbG9hZGVyLmpzPzQ0NDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxvREFBNkQ7QUFDcEY7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtY2xpZW50LXBhZ2VzLWxvYWRlci5qcz9wYWdlPSUyRiZhYnNvbHV0ZVBhZ2VQYXRoPSUyRmhvbWUlMkZtYXJzYSUyRkRvY3VtZW50b3MlMkZHaXRodWIlMkZwb3J0Zm9saW8lMkZzcmMlMkZwYWdlcyUyRmluZGV4LnRzeCEuLy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiL2hvbWUvbWFyc2EvRG9jdW1lbnRvcy9HaXRodWIvcG9ydGZvbGlvL3NyYy9wYWdlcy9pbmRleC50c3hcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2Fhome%2Fmarsa%2FDocumentos%2FGithub%2Fportfolio%2Fsrc%2Fpages%2Findex.tsx!./\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/dynamic.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/dynamic.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexports.__esModule = true;\nexports.noSSR = noSSR;\nexports[\"default\"] = dynamic;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _loadable = _interopRequireDefault(__webpack_require__(/*! ./loadable */ \"./node_modules/next/dist/next-server/lib/loadable.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar isServerSide = false;\n\nfunction noSSR(LoadableInitializer, loadableOptions) {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack;\n  delete loadableOptions.modules; // This check is necessary to prevent react-loadable from initializing on the server\n\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions);\n  }\n\n  var Loading = loadableOptions.loading; // This will only be rendered on the server side\n\n  return function () {\n    return /*#__PURE__*/_react[\"default\"].createElement(Loading, {\n      error: null,\n      isLoading: true,\n      pastDelay: false,\n      timedOut: false\n    });\n  };\n} // function dynamic<P = {}, O extends DynamicOptions>(options: O):\n\n\nfunction dynamic(dynamicOptions, options) {\n  var loadableFn = _loadable[\"default\"];\n  var loadableOptions = {\n    // A loading component is not required, so we default it\n    loading: function loading(_ref) {\n      var error = _ref.error,\n          isLoading = _ref.isLoading,\n          pastDelay = _ref.pastDelay;\n      if (!pastDelay) return null;\n\n      if (true) {\n        if (isLoading) {\n          return null;\n        }\n\n        if (error) {\n          return /*#__PURE__*/_react[\"default\"].createElement(\"p\", null, error.message, /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), error.stack);\n        }\n      }\n\n      return null;\n    }\n  }; // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = function () {\n      return dynamicOptions;\n    }; // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions; // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), dynamicOptions);\n  } // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n\n\n  loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), options);\n\n  if (typeof dynamicOptions === 'object' && !(dynamicOptions instanceof Promise)) {\n    // show deprecation warning for `modules` key in development\n    if (true) {\n      if (dynamicOptions.modules) {\n        console.warn('The modules option for next/dynamic has been deprecated. See here for more info https://err.sh/vercel/next.js/next-dynamic-modules');\n      }\n    } // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n\n    if (dynamicOptions.render) {\n      loadableOptions.render = function (loaded, props) {\n        return dynamicOptions.render(props, loaded);\n      };\n    } // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n\n\n    if (dynamicOptions.modules) {\n      loadableFn = _loadable[\"default\"].Map;\n      var loadModules = {};\n      var modules = dynamicOptions.modules();\n      Object.keys(modules).forEach(function (key) {\n        var value = modules[key];\n\n        if (typeof value.then === 'function') {\n          loadModules[key] = function () {\n            return value.then(function (mod) {\n              return mod[\"default\"] || mod;\n            });\n          };\n\n          return;\n        }\n\n        loadModules[key] = value;\n      });\n      loadableOptions.loader = loadModules;\n    }\n  } // coming from build/babel/plugins/react-loadable-plugin.js\n\n\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = _objectSpread(_objectSpread({}, loadableOptions), loadableOptions.loadableGenerated);\n    delete loadableOptions.loadableGenerated;\n  } // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n\n\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr;\n      return noSSR(loadableFn, loadableOptions);\n    }\n\n    delete loadableOptions.ssr;\n  }\n\n  return loadableFn(loadableOptions);\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/dynamic.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/loadable-context.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/loadable-context.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nexports.__esModule = true;\nexports.LoadableContext = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar LoadableContext = /*#__PURE__*/_react[\"default\"].createContext(null);\n\nexports.LoadableContext = LoadableContext;\n\nif (true) {\n  LoadableContext.displayName = 'LoadableContext';\n}\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4uLy4uLy4uL25leHQtc2VydmVyL2xpYi9sb2FkYWJsZS1jb250ZXh0LnRzP2FmMTUiXSwibmFtZXMiOlsiTG9hZGFibGVDb250ZXh0IiwiUmVhY3QiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7OztBQUlPOztBQUFBLElBQU1BLGVBQWUsZ0JBQUdDLGdDQUF4QixJQUF3QkEsQ0FBeEI7Ozs7QUFFUCxVQUEyQztBQUN6Q0QsaUJBQWUsQ0FBZkE7QUFDRCIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbmV4dC1zZXJ2ZXIvbGliL2xvYWRhYmxlLWNvbnRleHQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbnR5cGUgQ2FwdHVyZUZuID0gKG1vZHVsZU5hbWU6IHN0cmluZykgPT4gdm9pZFxuXG5leHBvcnQgY29uc3QgTG9hZGFibGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDxDYXB0dXJlRm4gfCBudWxsPihudWxsKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBMb2FkYWJsZUNvbnRleHQuZGlzcGxheU5hbWUgPSAnTG9hZGFibGVDb250ZXh0J1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/loadable-context.js\n");

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/loadable.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/loadable.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _defineProperty = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n\nvar _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _useSubscription = __webpack_require__(/*! use-subscription */ \"./node_modules/use-subscription/index.js\");\n\nvar _loadableContext = __webpack_require__(/*! ./loadable-context */ \"./node_modules/next/dist/next-server/lib/loadable-context.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n@copyright (c) 2017-present James Kyle <me@thejameskyle.com>\nMIT License\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\n*/\n// https://github.com/jamiebuilds/react-loadable/blob/v5.5.0/src/index.js\n// Modified to be compatible with webpack 4 / Next.js\n\n\nvar ALL_INITIALIZERS = [];\nvar READY_INITIALIZERS = [];\nvar initialized = false;\n\nfunction load(loader) {\n  var promise = loader();\n  var state = {\n    loading: true,\n    loaded: null,\n    error: null\n  };\n  state.promise = promise.then(function (loaded) {\n    state.loading = false;\n    state.loaded = loaded;\n    return loaded;\n  })[\"catch\"](function (err) {\n    state.loading = false;\n    state.error = err;\n    throw err;\n  });\n  return state;\n}\n\nfunction loadMap(obj) {\n  var state = {\n    loading: false,\n    loaded: {},\n    error: null\n  };\n  var promises = [];\n\n  try {\n    Object.keys(obj).forEach(function (key) {\n      var result = load(obj[key]);\n\n      if (!result.loading) {\n        state.loaded[key] = result.loaded;\n        state.error = result.error;\n      } else {\n        state.loading = true;\n      }\n\n      promises.push(result.promise);\n      result.promise.then(function (res) {\n        state.loaded[key] = res;\n      })[\"catch\"](function (err) {\n        state.error = err;\n      });\n    });\n  } catch (err) {\n    state.error = err;\n  }\n\n  state.promise = Promise.all(promises).then(function (res) {\n    state.loading = false;\n    return res;\n  })[\"catch\"](function (err) {\n    state.loading = false;\n    throw err;\n  });\n  return state;\n}\n\nfunction resolve(obj) {\n  return obj && obj.__esModule ? obj[\"default\"] : obj;\n}\n\nfunction render(loaded, props) {\n  return /*#__PURE__*/_react[\"default\"].createElement(resolve(loaded), props);\n}\n\nfunction createLoadableComponent(loadFn, options) {\n  var _s = $RefreshSig$();\n\n  var opts = Object.assign({\n    loader: null,\n    loading: null,\n    delay: 200,\n    timeout: null,\n    render: render,\n    webpack: null,\n    modules: null\n  }, options);\n  var subscription = null;\n\n  function init() {\n    if (!subscription) {\n      var sub = new LoadableSubscription(loadFn, opts);\n      subscription = {\n        getCurrentValue: sub.getCurrentValue.bind(sub),\n        subscribe: sub.subscribe.bind(sub),\n        retry: sub.retry.bind(sub),\n        promise: sub.promise.bind(sub)\n      };\n    }\n\n    return subscription.promise();\n  } // Server only\n\n\n  if (false) {} // Client only\n\n\n  if (!initialized && true && typeof opts.webpack === 'function') {\n    var moduleIds = opts.webpack();\n    READY_INITIALIZERS.push(function (ids) {\n      var _iterator = _createForOfIteratorHelper(moduleIds),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var moduleId = _step.value;\n\n          if (ids.indexOf(moduleId) !== -1) {\n            return init();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n  }\n\n  var LoadableComponent = function LoadableComponent(props, ref) {\n    _s();\n\n    init();\n\n    var context = _react[\"default\"].useContext(_loadableContext.LoadableContext);\n\n    var state = (0, _useSubscription.useSubscription)(subscription);\n\n    _react[\"default\"].useImperativeHandle(ref, function () {\n      return {\n        retry: subscription.retry\n      };\n    }, []);\n\n    if (context && Array.isArray(opts.modules)) {\n      opts.modules.forEach(function (moduleName) {\n        context(moduleName);\n      });\n    }\n\n    return _react[\"default\"].useMemo(function () {\n      if (state.loading || state.error) {\n        return /*#__PURE__*/_react[\"default\"].createElement(opts.loading, {\n          isLoading: state.loading,\n          pastDelay: state.pastDelay,\n          timedOut: state.timedOut,\n          error: state.error,\n          retry: subscription.retry\n        });\n      } else if (state.loaded) {\n        return opts.render(state.loaded, props);\n      } else {\n        return null;\n      }\n    }, [props, state]);\n  };\n\n  _s(LoadableComponent, \"Bp87+qHhaUk8bOFGKxqLWPW1xR0=\", true);\n\n  LoadableComponent.preload = function () {\n    return init();\n  };\n\n  LoadableComponent.displayName = 'LoadableComponent';\n  return /*#__PURE__*/_react[\"default\"].forwardRef(LoadableComponent);\n}\n\nvar LoadableSubscription = /*#__PURE__*/function () {\n  function LoadableSubscription(loadFn, opts) {\n    _classCallCheck(this, LoadableSubscription);\n\n    this._loadFn = loadFn;\n    this._opts = opts;\n    this._callbacks = new Set();\n    this._delay = null;\n    this._timeout = null;\n    this.retry();\n  }\n\n  _createClass(LoadableSubscription, [{\n    key: \"promise\",\n    value: function promise() {\n      return this._res.promise;\n    }\n  }, {\n    key: \"retry\",\n    value: function retry() {\n      var _this = this;\n\n      this._clearTimeouts();\n\n      this._res = this._loadFn(this._opts.loader);\n      this._state = {\n        pastDelay: false,\n        timedOut: false\n      };\n      var res = this._res,\n          opts = this._opts;\n\n      if (res.loading) {\n        if (typeof opts.delay === 'number') {\n          if (opts.delay === 0) {\n            this._state.pastDelay = true;\n          } else {\n            this._delay = setTimeout(function () {\n              _this._update({\n                pastDelay: true\n              });\n            }, opts.delay);\n          }\n        }\n\n        if (typeof opts.timeout === 'number') {\n          this._timeout = setTimeout(function () {\n            _this._update({\n              timedOut: true\n            });\n          }, opts.timeout);\n        }\n      }\n\n      this._res.promise.then(function () {\n        _this._update({});\n\n        _this._clearTimeouts();\n      })[\"catch\"](function (_err) {\n        _this._update({});\n\n        _this._clearTimeouts();\n      });\n\n      this._update({});\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(partial) {\n      this._state = _objectSpread(_objectSpread({}, this._state), {}, {\n        error: this._res.error,\n        loaded: this._res.loaded,\n        loading: this._res.loading\n      }, partial);\n\n      this._callbacks.forEach(function (callback) {\n        return callback();\n      });\n    }\n  }, {\n    key: \"_clearTimeouts\",\n    value: function _clearTimeouts() {\n      clearTimeout(this._delay);\n      clearTimeout(this._timeout);\n    }\n  }, {\n    key: \"getCurrentValue\",\n    value: function getCurrentValue() {\n      return this._state;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(callback) {\n      var _this2 = this;\n\n      this._callbacks.add(callback);\n\n      return function () {\n        _this2._callbacks[\"delete\"](callback);\n      };\n    }\n  }]);\n\n  return LoadableSubscription;\n}();\n\nfunction Loadable(opts) {\n  return createLoadableComponent(load, opts);\n}\n\n_c = Loadable;\n\nfunction LoadableMap(opts) {\n  if (typeof opts.render !== 'function') {\n    throw new Error('LoadableMap requires a `render(loaded, props)` function');\n  }\n\n  return createLoadableComponent(loadMap, opts);\n}\n\n_c2 = LoadableMap;\nLoadable.Map = LoadableMap;\n\nfunction flushInitializers(initializers, ids) {\n  var promises = [];\n\n  while (initializers.length) {\n    var init = initializers.pop();\n    promises.push(init(ids));\n  }\n\n  return Promise.all(promises).then(function () {\n    if (initializers.length) {\n      return flushInitializers(initializers, ids);\n    }\n  });\n}\n\nLoadable.preloadAll = function () {\n  return new Promise(function (resolveInitializers, reject) {\n    flushInitializers(ALL_INITIALIZERS).then(resolveInitializers, reject);\n  });\n};\n\nLoadable.preloadReady = function () {\n  var ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return new Promise(function (resolvePreload) {\n    var res = function res() {\n      initialized = true;\n      return resolvePreload();\n    }; // We always will resolve, errors should be handled within loading UIs.\n\n\n    flushInitializers(READY_INITIALIZERS, ids).then(res, res);\n  });\n};\n\nif (true) {\n  window.__NEXT_PRELOADREADY = Loadable.preloadReady;\n}\n\nvar _default = Loadable;\nexports[\"default\"] = _default;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loadable\");\n$RefreshReg$(_c2, \"LoadableMap\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/next-server/lib/loadable.js\n");

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = Function.call.bind(Object.prototype.hasOwnProperty);\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/YTE1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEsSUFBSSxJQUFxQztBQUN6Qyw2QkFBNkIsbUJBQU8sQ0FBQyx5RkFBNEI7QUFDakU7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsT0FBTztBQUNsQixXQUFXLE9BQU87QUFDbEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0R0FBNEc7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuICB2YXIgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIHZhciBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/prop-types/checkPropTypes.js\n");

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzPzU5YjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/prop-types/lib/ReactPropTypesSecret.js\n");

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v16.13.1\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\nvar checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar ReactVersion = '16.13.1';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  suspense: null\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\nfunction describeComponentFrame (name, source, ownerName) {\n  var sourceInfo = '';\n\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n\n        if (match) {\n          var pathBeforeSlash = match[1];\n\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nvar Resolved = 1;\nfunction refineResolvedLazyComponent(lazyComponent) {\n  return lazyComponent._status === Resolved ? lazyComponent._result : null;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = innerType.displayName || innerType.name || '';\n  return outerType.displayName || (functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName);\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return \"Profiler\";\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        return getComponentName(type.type);\n\n      case REACT_BLOCK_TYPE:\n        return getComponentName(type.render);\n\n      case REACT_LAZY_TYPE:\n        {\n          var thenable = type;\n          var resolvedThenable = refineResolvedLazyComponent(thenable);\n\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\nvar currentlyValidatingElement = null;\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n/**\n * Used by act() to track whether you're inside an act() scope.\n */\nvar IsSomeRendererActing = {\n  current: false\n};\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner,\n  IsSomeRendererActing: IsSomeRendererActing,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    printWarning('warn', format, args);\n  }\n}\nfunction error(format) {\n  {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    printWarning('error', format, args);\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var hasExistingStack = args.length > 0 && typeof args[args.length - 1] === 'string' && args[args.length - 1].indexOf('\\n    in') === 0;\n\n    if (!hasExistingStack) {\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n      if (stack !== '') {\n        format += '%s';\n        args = args.concat([stack]);\n      }\n    }\n\n    var argsWithFormat = args.map(function (item) {\n      return '' + item;\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(message);\n    } catch (x) {}\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {\n    {\n      throw Error( \"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\" );\n    }\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n_assign(pureComponentPrototype, Component.prototype);\n\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentName(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (!!(element === null || element === undefined)) {\n    {\n      throw Error( \"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\" );\n    }\n  }\n\n  var propName; // Original props are copied\n\n  var props = _assign({}, element.props); // Reserved names are extracted\n\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\n\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is deprecated and will be removed in ' + 'a future major release. Consider converting children to ' + 'an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n\n      var childrenString = '' + children;\n\n      {\n        {\n          throw Error( \"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \").\" + addendum );\n        }\n      }\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n  func.call(context, child, bookKeeping.count++);\n}\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\n\n\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\n\n\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    {\n      throw Error( \"React.Children.only expected to receive a single React element child.\" );\n    }\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {\n        error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n      }\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context,\n      _calculateChangedBits: context._calculateChangedBits\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _ctor: ctor,\n    // React uses these fields to store the result.\n    _status: -1,\n    _result: null\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes;\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  return {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  if (!(dispatcher !== null)) {\n    {\n      throw Error( \"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)\\n2. You might be breaking the Rules of Hooks\\n3. You might have more than one copy of React in the same app\\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\" );\n    }\n  }\n\n  return dispatcher;\n}\n\nfunction useContext(Context, unstable_observedBits) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    if (unstable_observedBits !== undefined) {\n      error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\\n\\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '');\n    } // TODO: add a more generic warning for invalid values.\n\n\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context, unstable_observedBits);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentName(element._owner.type) + \".\";\n  }\n\n  setCurrentlyValidatingElement(element);\n\n  {\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var name = getComponentName(type);\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      setCurrentlyValidatingElement(element);\n      checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n      setCurrentlyValidatingElement(null);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true;\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    setCurrentlyValidatingElement(fragment);\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n    }\n\n    setCurrentlyValidatingElement(null);\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentName(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\n{\n\n  try {\n    var frozenObject = Object.freeze({});\n    var testMap = new Map([[frozenObject, null]]);\n    var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.\n    // https://github.com/rollup/rollup/issues/1771\n    // TODO: we can remove these if Rollup fixes the bug.\n\n    testMap.set(0, 0);\n    testSet.add(0);\n  } catch (e) {\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useEffect = useEffect;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.version = ReactVersion;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzP2FiNWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDO0FBQ0QsbUJBQW1CLG1CQUFPLENBQUMsaUZBQTRCO0FBQ3ZEIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react/index.js\n");

/***/ }),

/***/ "./node_modules/use-subscription/cjs/use-subscription.development.js":
/*!***************************************************************************!*\
  !*** ./node_modules/use-subscription/cjs/use-subscription.development.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/** @license React v1.4.1\n * use-subscription.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar _assign = __webpack_require__(/*! object-assign */ \"./node_modules/next/dist/build/polyfills/object-assign.js\");\nvar react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n//\n// In order to avoid removing and re-adding subscriptions each time this hook is called,\n// the parameters passed to this hook should be memoized in some way–\n// either by wrapping the entire params object with useMemo()\n// or by wrapping the individual callbacks with useCallback().\n\nfunction useSubscription(_ref) {\n  var getCurrentValue = _ref.getCurrentValue,\n      subscribe = _ref.subscribe;\n\n  // Read the current value from our subscription.\n  // When this value changes, we'll schedule an update with React.\n  // It's important to also store the hook params so that we can check for staleness.\n  // (See the comment in checkForUpdates() below for more info.)\n  var _useState = react.useState(function () {\n    return {\n      getCurrentValue: getCurrentValue,\n      subscribe: subscribe,\n      value: getCurrentValue()\n    };\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var valueToReturn = state.value; // If parameters have changed since our last render, schedule an update with its current value.\n\n  if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {\n    // If the subscription has been updated, we'll schedule another update with React.\n    // React will process this update immediately, so the old subscription value won't be committed.\n    // It is still nice to avoid returning a mismatched value though, so let's override the return value.\n    valueToReturn = getCurrentValue();\n    setState({\n      getCurrentValue: getCurrentValue,\n      subscribe: subscribe,\n      value: valueToReturn\n    });\n  } // Display the current value for this hook in React DevTools.\n\n\n  react.useDebugValue(valueToReturn); // It is important not to subscribe while rendering because this can lead to memory leaks.\n  // (Learn more at reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects)\n  // Instead, we wait until the commit phase to attach our handler.\n  //\n  // We intentionally use a passive effect (useEffect) rather than a synchronous one (useLayoutEffect)\n  // so that we don't stretch the commit phase.\n  // This also has an added benefit when multiple components are subscribed to the same source:\n  // It allows each of the event handlers to safely schedule work without potentially removing an another handler.\n  // (Learn more at https://codesandbox.io/s/k0yvr5970o)\n\n  react.useEffect(function () {\n    var didUnsubscribe = false;\n\n    var checkForUpdates = function () {\n      // It's possible that this callback will be invoked even after being unsubscribed,\n      // if it's removed as a result of a subscription event/update.\n      // In this case, React will log a DEV warning about an update from an unmounted component.\n      // We can avoid triggering that warning with this check.\n      if (didUnsubscribe) {\n        return;\n      } // We use a state updater function to avoid scheduling work for a stale source.\n      // However it's important to eagerly read the currently value,\n      // so that all scheduled work shares the same value (in the event of multiple subscriptions).\n      // This avoids visual \"tearing\" when a mutation happens during a (concurrent) render.\n\n\n      var value = getCurrentValue();\n      setState(function (prevState) {\n        // Ignore values from stale sources!\n        // Since we subscribe an unsubscribe in a passive effect,\n        // it's possible that this callback will be invoked for a stale (previous) subscription.\n        // This check avoids scheduling an update for that stale subscription.\n        if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {\n          return prevState;\n        } // Some subscriptions will auto-invoke the handler, even if the value hasn't changed.\n        // If the value hasn't changed, no update is needed.\n        // Return state as-is so React can bail out and avoid an unnecessary render.\n\n\n        if (prevState.value === value) {\n          return prevState;\n        }\n\n        return _assign({}, prevState, {\n          value: value\n        });\n      });\n    };\n\n    var unsubscribe = subscribe(checkForUpdates); // Because we're subscribing in a passive effect,\n    // it's possible that an update has occurred between render and our effect handler.\n    // Check for this and schedule an update if work has occurred.\n\n    checkForUpdates();\n    return function () {\n      didUnsubscribe = true;\n      unsubscribe();\n    };\n  }, [getCurrentValue, subscribe]); // Return the current value for our caller to use while rendering.\n\n  return valueToReturn;\n}\n\nexports.useSubscription = useSubscription;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/use-subscription/cjs/use-subscription.development.js\n");

/***/ }),

/***/ "./node_modules/use-subscription/index.js":
/*!************************************************!*\
  !*** ./node_modules/use-subscription/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/use-subscription.development.js */ \"./node_modules/use-subscription/cjs/use-subscription.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VzZS1zdWJzY3JpcHRpb24vaW5kZXguanM/ZjBiZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUM7QUFDRCxtQkFBbUIsbUJBQU8sQ0FBQyxrSEFBdUM7QUFDbEUiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXNlLXN1YnNjcmlwdGlvbi9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy91c2Utc3Vic2NyaXB0aW9uLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3VzZS1zdWJzY3JpcHRpb24uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/use-subscription/index.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS9idWlsZGluL2hhcm1vbnktbW9kdWxlLmpzPzgyYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcblx0aWYgKCFvcmlnaW5hbE1vZHVsZS53ZWJwYWNrUG9seWZpbGwpIHtcblx0XHR2YXIgbW9kdWxlID0gT2JqZWN0LmNyZWF0ZShvcmlnaW5hbE1vZHVsZSk7XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiZXhwb3J0c1wiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXG5cdFx0fSk7XG5cdFx0bW9kdWxlLndlYnBhY2tQb2x5ZmlsbCA9IDE7XG5cdH1cblx0cmV0dXJuIG1vZHVsZTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/harmony-module.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLyh3ZWJwYWNrKS9idWlsZGluL21vZHVsZS5qcz9jZWQyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vbW9kdWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcblx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XG5cdFx0bW9kdWxlLnBhdGhzID0gW107XG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XG5cdFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwibG9hZGVkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmw7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJpZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5pO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n");

/***/ }),

/***/ "./src/components/Container/Container.tsx":
/*!************************************************!*\
  !*** ./src/components/Container/Container.tsx ***!
  \************************************************/
/*! exports provided: Container */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Container\", function() { return Container; });\n/* harmony import */ var _styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/styles/stitches.config */ \"./src/styles/stitches.config.ts\");\n\nvar Container = Object(_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", {\n  maxWidth: \"1000px\",\n  padding: \"20px\",\n  margin: \"auto\"\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ29udGFpbmVyL0NvbnRhaW5lci50c3g/NjZiMCJdLCJuYW1lcyI6WyJDb250YWluZXIiLCJzdHlsZWQiLCJtYXhXaWR0aCIsInBhZGRpbmciLCJtYXJnaW4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRU8sSUFBTUEsU0FBUyxHQUFHQyxzRUFBTSxDQUFDLEtBQUQsRUFBUTtBQUNuQ0MsVUFBUSxFQUFFLFFBRHlCO0FBRW5DQyxTQUFPLEVBQUUsTUFGMEI7QUFHbkNDLFFBQU0sRUFBRTtBQUgyQixDQUFSLENBQXhCIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudHMvQ29udGFpbmVyL0NvbnRhaW5lci50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwifi9zdHlsZXMvc3RpdGNoZXMuY29uZmlnXCI7XG5cbmV4cG9ydCBjb25zdCBDb250YWluZXIgPSBzdHlsZWQoXCJkaXZcIiwge1xuICAgIG1heFdpZHRoOiBcIjEwMDBweFwiLFxuICAgIHBhZGRpbmc6IFwiMjBweFwiLFxuICAgIG1hcmdpbjogXCJhdXRvXCIsXG4gIH0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Container/Container.tsx\n");

/***/ }),

/***/ "./src/components/Link/Link.tsx":
/*!**************************************!*\
  !*** ./src/components/Link/Link.tsx ***!
  \**************************************/
/*! exports provided: Link */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Link\", function() { return Link; });\n/* harmony import */ var _styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/styles/stitches.config */ \"./src/styles/stitches.config.ts\");\n\nvar Link = Object(_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"a\", {\n  // Custom\n  color: \"white\",\n  transition: \"color 0.3s ease 0s, background-size 0.3s ease 0s\",\n  backgroundImage: \"linear-gradient(to left, rgb(255, 255, 255), rgb(255, 255, 255))\",\n  backgroundSize: \"0% 1px\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"left bottom\",\n  lineHeight: \"inherit\",\n  \":hover\": {\n    backgroundSize: \"100% 1px\"\n  },\n  cursor: \"pointer\",\n  fontFamily: \"$primary\",\n  fontSize: \"$1\"\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvTGluay9MaW5rLnRzeD9lYjliIl0sIm5hbWVzIjpbIkxpbmsiLCJzdHlsZWQiLCJjb2xvciIsInRyYW5zaXRpb24iLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiYWNrZ3JvdW5kU2l6ZSIsImJhY2tncm91bmRSZXBlYXQiLCJiYWNrZ3JvdW5kUG9zaXRpb24iLCJsaW5lSGVpZ2h0IiwiY3Vyc29yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVPLElBQU1BLElBQUksR0FBR0Msc0VBQU0sQ0FBQyxHQUFELEVBQU07QUFDOUI7QUFDQUMsT0FBSyxFQUFFLE9BRnVCO0FBRzlCQyxZQUFVLEVBQUUsa0RBSGtCO0FBSTlCQyxpQkFBZSxFQUNiLGtFQUw0QjtBQU05QkMsZ0JBQWMsRUFBRSxRQU5jO0FBTzlCQyxrQkFBZ0IsRUFBRSxXQVBZO0FBUTlCQyxvQkFBa0IsRUFBRSxhQVJVO0FBUzlCQyxZQUFVLEVBQUUsU0FUa0I7QUFVOUIsWUFBVTtBQUNSSCxrQkFBYyxFQUFFO0FBRFIsR0FWb0I7QUFhOUJJLFFBQU0sRUFBRSxTQWJzQjtBQWM5QkMsWUFBVSxFQUFFLFVBZGtCO0FBZTlCQyxVQUFRLEVBQUU7QUFmb0IsQ0FBTixDQUFuQiIsImZpbGUiOiIuL3NyYy9jb21wb25lbnRzL0xpbmsvTGluay50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwifi9zdHlsZXMvc3RpdGNoZXMuY29uZmlnXCI7XG5cbmV4cG9ydCBjb25zdCBMaW5rID0gc3R5bGVkKFwiYVwiLCB7XG4gIC8vIEN1c3RvbVxuICBjb2xvcjogXCJ3aGl0ZVwiLFxuICB0cmFuc2l0aW9uOiBcImNvbG9yIDAuM3MgZWFzZSAwcywgYmFja2dyb3VuZC1zaXplIDAuM3MgZWFzZSAwc1wiLFxuICBiYWNrZ3JvdW5kSW1hZ2U6XG4gICAgXCJsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgcmdiKDI1NSwgMjU1LCAyNTUpLCByZ2IoMjU1LCAyNTUsIDI1NSkpXCIsXG4gIGJhY2tncm91bmRTaXplOiBcIjAlIDFweFwiLFxuICBiYWNrZ3JvdW5kUmVwZWF0OiBcIm5vLXJlcGVhdFwiLFxuICBiYWNrZ3JvdW5kUG9zaXRpb246IFwibGVmdCBib3R0b21cIixcbiAgbGluZUhlaWdodDogXCJpbmhlcml0XCIsXG4gIFwiOmhvdmVyXCI6IHtcbiAgICBiYWNrZ3JvdW5kU2l6ZTogXCIxMDAlIDFweFwiLFxuICB9LFxuICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICBmb250RmFtaWx5OiBcIiRwcmltYXJ5XCIsXG4gIGZvbnRTaXplOiBcIiQxXCIsXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/Link/Link.tsx\n");

/***/ }),

/***/ "./src/components/MainLayout/MainLayout.tsx":
/*!**************************************************!*\
  !*** ./src/components/MainLayout/MainLayout.tsx ***!
  \**************************************************/
/*! exports provided: MainLayout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MainLayout\", function() { return MainLayout; });\n/* harmony import */ var _src_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/src/styles/stitches.config */ \"./src/styles/stitches.config.ts\");\n\nvar MainLayout = Object(_src_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", {\n  minHeight: \"100vh\",\n  backgroundColor: \"$secondary\"\n});\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvTWFpbkxheW91dC9NYWluTGF5b3V0LnRzeD9jOGJjIl0sIm5hbWVzIjpbIk1haW5MYXlvdXQiLCJzdHlsZWQiLCJtaW5IZWlnaHQiLCJiYWNrZ3JvdW5kQ29sb3IiXSwibWFwcGluZ3MiOiJBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRU8sSUFBTUEsVUFBVSxHQUFHQywwRUFBTSxDQUFDLEtBQUQsRUFBUTtBQUNwQ0MsV0FBUyxFQUFFLE9BRHlCO0FBRXBDQyxpQkFBZSxFQUFFO0FBRm1CLENBQVIsQ0FBekIiLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9NYWluTGF5b3V0L01haW5MYXlvdXQudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwifi9zcmMvc3R5bGVzL3N0aXRjaGVzLmNvbmZpZ1wiO1xuXG5leHBvcnQgY29uc3QgTWFpbkxheW91dCA9IHN0eWxlZChcImRpdlwiLCB7XG4gICAgbWluSGVpZ2h0OiBcIjEwMHZoXCIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBcIiRzZWNvbmRhcnlcIixcbiAgfSk7XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/MainLayout/MainLayout.tsx\n");

/***/ }),

/***/ "./src/components/Stack/Stack.tsx":
/*!****************************************!*\
  !*** ./src/components/Stack/Stack.tsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/styles/stitches.config */ \"./src/styles/stitches.config.ts\");\n\nvar Stack = Object(_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"div\", {\n  display: \"flex\",\n  variants: {\n    direction: {\n      column: {\n        flexDirection: \"column\"\n      },\n      row: {\n        fontSize: \"row\"\n      }\n    },\n    alignItems: {\n      center: {\n        alignItems: \"center\"\n      }\n    },\n    justifyContent: {\n      spaceBetween: {\n        justifyContent: \"space-between\"\n      }\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (Stack);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvU3RhY2svU3RhY2sudHN4P2E3NDciXSwibmFtZXMiOlsiU3RhY2siLCJzdHlsZWQiLCJkaXNwbGF5IiwidmFyaWFudHMiLCJkaXJlY3Rpb24iLCJjb2x1bW4iLCJmbGV4RGlyZWN0aW9uIiwicm93IiwiZm9udFNpemUiLCJhbGlnbkl0ZW1zIiwiY2VudGVyIiwianVzdGlmeUNvbnRlbnQiLCJzcGFjZUJldHdlZW4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVBLElBQU1BLEtBQUssR0FBR0Msc0VBQU0sQ0FBQyxLQUFELEVBQVE7QUFDMUJDLFNBQU8sRUFBRSxNQURpQjtBQUUxQkMsVUFBUSxFQUFFO0FBQ1JDLGFBQVMsRUFBRTtBQUNUQyxZQUFNLEVBQUU7QUFDTkMscUJBQWEsRUFBRTtBQURULE9BREM7QUFJVEMsU0FBRyxFQUFFO0FBQ0hDLGdCQUFRLEVBQUU7QUFEUDtBQUpJLEtBREg7QUFTUkMsY0FBVSxFQUFFO0FBQ1ZDLFlBQU0sRUFBRTtBQUNORCxrQkFBVSxFQUFFO0FBRE47QUFERSxLQVRKO0FBY1JFLGtCQUFjLEVBQUU7QUFDZEMsa0JBQVksRUFBRTtBQUNaRCxzQkFBYyxFQUFFO0FBREo7QUFEQTtBQWRSO0FBRmdCLENBQVIsQ0FBcEI7QUF3QmVYLG9FQUFmIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudHMvU3RhY2svU3RhY2sudHN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSBcIn4vc3R5bGVzL3N0aXRjaGVzLmNvbmZpZ1wiO1xuXG5jb25zdCBTdGFjayA9IHN0eWxlZChcImRpdlwiLCB7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICB2YXJpYW50czoge1xuICAgIGRpcmVjdGlvbjoge1xuICAgICAgY29sdW1uOiB7XG4gICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICB9LFxuICAgICAgcm93OiB7XG4gICAgICAgIGZvbnRTaXplOiBcInJvd1wiLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGFsaWduSXRlbXM6IHtcbiAgICAgIGNlbnRlcjoge1xuICAgICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGp1c3RpZnlDb250ZW50OiB7XG4gICAgICBzcGFjZUJldHdlZW46IHtcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYmV0d2VlblwiLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IFN0YWNrO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Stack/Stack.tsx\n");

/***/ }),

/***/ "./src/components/Text/Text.tsx":
/*!**************************************!*\
  !*** ./src/components/Text/Text.tsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ~/styles/stitches.config */ \"./src/styles/stitches.config.ts\");\n\nvar Text = Object(_styles_stitches_config__WEBPACK_IMPORTED_MODULE_0__[\"styled\"])(\"span\", {\n  fontSize: \"$1\",\n  color: \"$primary\",\n  variants: {\n    size: {\n      $1: {\n        fontSize: \"$1\"\n      },\n      $2: {\n        fontSize: \"$2\"\n      },\n      $3: {\n        fontSize: \"$3\"\n      },\n      $4: {\n        fontSize: \"$4\"\n      },\n      $7: {\n        fontSize: \"$7\"\n      }\n    },\n    fontWeight: {\n      800: {\n        fontWeight: 800\n      },\n      400: {\n        fontWeight: 400\n      }\n    },\n    fontFamily: {\n      $primary: {\n        fontFamily: \"$primary\"\n      },\n      $secondary: {\n        fontFamily: \"$secondary\"\n      }\n    }\n  }\n});\nText.defaultProps = {\n  fontFamily: \"$primary\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Text);\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvVGV4dC9UZXh0LnRzeD8zN2MzIl0sIm5hbWVzIjpbIlRleHQiLCJzdHlsZWQiLCJmb250U2l6ZSIsImNvbG9yIiwidmFyaWFudHMiLCJzaXplIiwiJDEiLCIkMiIsIiQzIiwiJDQiLCIkNyIsImZvbnRXZWlnaHQiLCJmb250RmFtaWx5IiwiJHByaW1hcnkiLCIkc2Vjb25kYXJ5IiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLHNFQUFNLENBQUMsTUFBRCxFQUFTO0FBQzFCQyxVQUFRLEVBQUUsSUFEZ0I7QUFFMUJDLE9BQUssRUFBRSxVQUZtQjtBQUcxQkMsVUFBUSxFQUFFO0FBQ1JDLFFBQUksRUFBRTtBQUNKQyxRQUFFLEVBQUU7QUFDRkosZ0JBQVEsRUFBRTtBQURSLE9BREE7QUFJSkssUUFBRSxFQUFFO0FBQ0ZMLGdCQUFRLEVBQUU7QUFEUixPQUpBO0FBT0pNLFFBQUUsRUFBRTtBQUNGTixnQkFBUSxFQUFFO0FBRFIsT0FQQTtBQVVKTyxRQUFFLEVBQUU7QUFDRlAsZ0JBQVEsRUFBRTtBQURSLE9BVkE7QUFhSlEsUUFBRSxFQUFFO0FBQ0ZSLGdCQUFRLEVBQUU7QUFEUjtBQWJBLEtBREU7QUFrQlJTLGNBQVUsRUFBRTtBQUNWLFdBQUs7QUFDSEEsa0JBQVUsRUFBRTtBQURULE9BREs7QUFJVixXQUFLO0FBQ0hBLGtCQUFVLEVBQUU7QUFEVDtBQUpLLEtBbEJKO0FBMEJSQyxjQUFVLEVBQUU7QUFDVkMsY0FBUSxFQUFFO0FBQUVELGtCQUFVLEVBQUU7QUFBZCxPQURBO0FBRVZFLGdCQUFVLEVBQUU7QUFBRUYsa0JBQVUsRUFBRTtBQUFkO0FBRkY7QUExQko7QUFIZ0IsQ0FBVCxDQUFuQjtBQW9DQVosSUFBSSxDQUFDZSxZQUFMLEdBQW9CO0FBQ2xCSCxZQUFVLEVBQUU7QUFETSxDQUFwQjtBQUllWixtRUFBZiIsImZpbGUiOiIuL3NyYy9jb21wb25lbnRzL1RleHQvVGV4dC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHlsZWQgfSBmcm9tIFwifi9zdHlsZXMvc3RpdGNoZXMuY29uZmlnXCI7XG5cbmNvbnN0IFRleHQgPSBzdHlsZWQoXCJzcGFuXCIsIHtcbiAgZm9udFNpemU6IFwiJDFcIixcbiAgY29sb3I6IFwiJHByaW1hcnlcIixcbiAgdmFyaWFudHM6IHtcbiAgICBzaXplOiB7XG4gICAgICAkMToge1xuICAgICAgICBmb250U2l6ZTogXCIkMVwiLFxuICAgICAgfSxcbiAgICAgICQyOiB7XG4gICAgICAgIGZvbnRTaXplOiBcIiQyXCIsXG4gICAgICB9LFxuICAgICAgJDM6IHtcbiAgICAgICAgZm9udFNpemU6IFwiJDNcIixcbiAgICAgIH0sXG4gICAgICAkNDoge1xuICAgICAgICBmb250U2l6ZTogXCIkNFwiLFxuICAgICAgfSxcbiAgICAgICQ3OiB7XG4gICAgICAgIGZvbnRTaXplOiBcIiQ3XCIsXG4gICAgICB9LFxuICAgIH0sXG4gICAgZm9udFdlaWdodDoge1xuICAgICAgODAwOiB7XG4gICAgICAgIGZvbnRXZWlnaHQ6IDgwMCxcbiAgICAgIH0sXG4gICAgICA0MDA6IHtcbiAgICAgICAgZm9udFdlaWdodDogNDAwLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGZvbnRGYW1pbHk6IHtcbiAgICAgICRwcmltYXJ5OiB7IGZvbnRGYW1pbHk6IFwiJHByaW1hcnlcIiB9LFxuICAgICAgJHNlY29uZGFyeTogeyBmb250RmFtaWx5OiBcIiRzZWNvbmRhcnlcIiB9LFxuICAgIH0sXG4gIH0sXG59KTtcblxuVGV4dC5kZWZhdWx0UHJvcHMgPSB7XG4gIGZvbnRGYW1pbHk6IFwiJHByaW1hcnlcIixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRleHQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/Text/Text.tsx\n");

/***/ }),

/***/ "./src/components/Text/Title.tsx":
/*!***************************************!*\
  !*** ./src/components/Text/Title.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Text */ \"./src/components/Text/Text.tsx\");\n\n\nvar _this = undefined,\n    _jsxFileName = \"/home/marsa/Documentos/Github/portfolio/src/components/Text/Title.tsx\";\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\nvar Title = function Title(props) {\n  return __jsx(_Text__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n    as: \"h1\",\n    size: \"$7\",\n    fontWeight: \"800\",\n    fontFamily: \"$primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 3\n    }\n  }));\n};\n\n_c = Title;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Title);\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvVGV4dC9UaXRsZS50c3g/MWU5MiJdLCJuYW1lcyI6WyJUaXRsZSIsInByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxDQUFDQyxLQUFEO0FBQUEsU0FDWixNQUFDLDZDQUFELHlGQUFVQSxLQUFWO0FBQWlCLE1BQUUsRUFBQyxJQUFwQjtBQUF5QixRQUFJLEVBQUMsSUFBOUI7QUFBbUMsY0FBVSxFQUFDLEtBQTlDO0FBQW9ELGNBQVUsRUFBQyxVQUEvRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBRFk7QUFBQSxDQUFkOztLQUFNRCxLO0FBSVNBLG9FQUFmIiwiZmlsZSI6Ii4vc3JjL2NvbXBvbmVudHMvVGV4dC9UaXRsZS50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVGV4dCBmcm9tIFwiLi9UZXh0XCI7XG5jb25zdCBUaXRsZSA9IChwcm9wcykgPT4gKFxuICA8VGV4dCB7Li4ucHJvcHN9IGFzPVwiaDFcIiBzaXplPVwiJDdcIiBmb250V2VpZ2h0PVwiODAwXCIgZm9udEZhbWlseT1cIiRwcmltYXJ5XCIgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFRpdGxlO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/Text/Title.tsx\n");

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dynamic */ \"./node_modules/next/dist/next-server/lib/dynamic.js\");\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_Container_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Container/Container */ \"./src/components/Container/Container.tsx\");\n/* harmony import */ var _components_MainLayout_MainLayout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/MainLayout/MainLayout */ \"./src/components/MainLayout/MainLayout.tsx\");\n/* harmony import */ var _components_Text_Title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Text/Title */ \"./src/components/Text/Title.tsx\");\n/* harmony import */ var _components_Text_Text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Text/Text */ \"./src/components/Text/Text.tsx\");\n/* harmony import */ var _components_Stack_Stack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Stack/Stack */ \"./src/components/Stack/Stack.tsx\");\n/* harmony import */ var _components_Link_Link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Link/Link */ \"./src/components/Link/Link.tsx\");\nvar _jsxFileName = \"/home/marsa/Documentos/Github/portfolio/src/pages/index.tsx\";\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;\n\n\n\n\n\n\n\n\nvar Hydra = next_dynamic__WEBPACK_IMPORTED_MODULE_0___default()(_c = function _c() {\n  return __webpack_require__.e(/*! import() */ 1).then(__webpack_require__.bind(null, /*! ../containers/Hydra */ \"./src/containers/Hydra.tsx\"));\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [/*require.resolve*/(/*! ../containers/Hydra */ \"./src/containers/Hydra.tsx\")];\n    },\n    modules: [\"../containers/Hydra\"]\n  }\n});\n_c2 = Hydra;\n\nfunction HomePage() {\n  return __jsx(_components_MainLayout_MainLayout__WEBPACK_IMPORTED_MODULE_3__[\"MainLayout\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(_components_Container_Container__WEBPACK_IMPORTED_MODULE_2__[\"Container\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(_components_Text_Title__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    css: {\n      my: \"$3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Sup, I'm Marsa\"), __jsx(Hydra, {\n    width: \"1000\",\n    height: \"1000\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), __jsx(_components_Stack_Stack__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    justifyContent: \"spaceBetween\",\n    css: {\n      marginTop: \"$3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(_components_Text_Text__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"A FRONTEND ENGINEER WITH A KEEN INTEREST IN ART AND DESIGN\"), __jsx(_components_Stack_Stack__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(_components_Link_Link__WEBPACK_IMPORTED_MODULE_7__[\"Link\"], {\n    as: \"a\",\n    css: {\n      marginBottom: \"$1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"GITHUB\"), __jsx(_components_Link_Link__WEBPACK_IMPORTED_MODULE_7__[\"Link\"], {\n    as: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"TWITTER\")))));\n}\n\n_c3 = HomePage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (HomePage);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Hydra$dynamic\");\n$RefreshReg$(_c2, \"Hydra\");\n$RefreshReg$(_c3, \"HomePage\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL2luZGV4LnRzeD80MWUwIl0sIm5hbWVzIjpbIkh5ZHJhIiwiZHluYW1pYyIsInNzciIsIkhvbWVQYWdlIiwibXkiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxtREFBTyxNQUFDO0FBQUEsU0FBTSxzSUFBTjtBQUFBLENBQUQsRUFBc0M7QUFBRUMsS0FBRyxFQUFFLEtBQVA7QUFBQTtBQUFBO0FBQUEsa0NBQXhCLHVEQUF3QjtBQUFBO0FBQUEsY0FBeEIscUJBQXdCO0FBQUE7QUFBQSxDQUF0QyxDQUFyQjtNQUFNRixLOztBQUVOLFNBQVNHLFFBQVQsR0FBb0I7QUFDbEIsU0FDRSxNQUFDLDRFQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRSxNQUFDLHlFQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FDRSxNQUFDLDhEQUFEO0FBQU8sT0FBRyxFQUFFO0FBQUVDLFFBQUUsRUFBRTtBQUFOLEtBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFERixFQUVFLE1BQUMsS0FBRDtBQUFPLFNBQUssRUFBQyxNQUFiO0FBQW9CLFVBQU0sRUFBQyxNQUEzQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLElBRkYsRUFHRSxNQUFDLCtEQUFEO0FBQU8sa0JBQWMsRUFBQyxjQUF0QjtBQUFxQyxPQUFHLEVBQUU7QUFBRUMsZUFBUyxFQUFFO0FBQWIsS0FBMUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNFLE1BQUMsNkRBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrRUFERixFQUlFLE1BQUMsK0RBQUQ7QUFBTyxhQUFTLEVBQUMsUUFBakI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUNFLE1BQUMsMERBQUQ7QUFBTSxNQUFFLEVBQUMsR0FBVDtBQUFhLE9BQUcsRUFBRTtBQUFFQyxrQkFBWSxFQUFFO0FBQWhCLEtBQWxCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FERixFQUlFLE1BQUMsMERBQUQ7QUFBTSxNQUFFLEVBQUMsR0FBVDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBSkYsQ0FKRixDQUhGLENBREYsQ0FERjtBQW1CRDs7TUFwQlFILFE7QUFzQk1BLHVFQUFmIiwiZmlsZSI6Ii4vc3JjL3BhZ2VzL2luZGV4LnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkeW5hbWljIGZyb20gXCJuZXh0L2R5bmFtaWNcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0NvbnRhaW5lci9Db250YWluZXJcIjtcbmltcG9ydCB7IE1haW5MYXlvdXQgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9NYWluTGF5b3V0L01haW5MYXlvdXRcIjtcbmltcG9ydCBUaXRsZSBmcm9tIFwiLi4vY29tcG9uZW50cy9UZXh0L1RpdGxlXCI7XG5pbXBvcnQgVGV4dCBmcm9tIFwiLi4vY29tcG9uZW50cy9UZXh0L1RleHRcIjtcbmltcG9ydCBTdGFjayBmcm9tIFwiLi4vY29tcG9uZW50cy9TdGFjay9TdGFja1wiO1xuaW1wb3J0IHsgTGluayB9IGZyb20gXCIuLi9jb21wb25lbnRzL0xpbmsvTGlua1wiO1xuXG5jb25zdCBIeWRyYSA9IGR5bmFtaWMoKCkgPT4gaW1wb3J0KFwiLi4vY29udGFpbmVycy9IeWRyYVwiKSwgeyBzc3I6IGZhbHNlIH0pO1xuXG5mdW5jdGlvbiBIb21lUGFnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8TWFpbkxheW91dD5cbiAgICAgIDxDb250YWluZXI+XG4gICAgICAgIDxUaXRsZSBjc3M9e3sgbXk6IFwiJDNcIiB9fT5TdXAsIEknbSBNYXJzYTwvVGl0bGU+XG4gICAgICAgIDxIeWRyYSB3aWR0aD1cIjEwMDBcIiBoZWlnaHQ9XCIxMDAwXCI+PC9IeWRyYT5cbiAgICAgICAgPFN0YWNrIGp1c3RpZnlDb250ZW50PVwic3BhY2VCZXR3ZWVuXCIgY3NzPXt7IG1hcmdpblRvcDogXCIkM1wiIH19PlxuICAgICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgQSBGUk9OVEVORCBFTkdJTkVFUiBXSVRIIEEgS0VFTiBJTlRFUkVTVCBJTiBBUlQgQU5EIERFU0lHTlxuICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICA8U3RhY2sgZGlyZWN0aW9uPVwiY29sdW1uXCI+XG4gICAgICAgICAgICA8TGluayBhcz1cImFcIiBjc3M9e3sgbWFyZ2luQm90dG9tOiBcIiQxXCIgfX0+XG4gICAgICAgICAgICAgIEdJVEhVQlxuICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgPExpbmsgYXM9XCJhXCI+VFdJVFRFUjwvTGluaz5cbiAgICAgICAgICA8L1N0YWNrPlxuICAgICAgICA8L1N0YWNrPlxuICAgICAgPC9Db250YWluZXI+XG4gICAgPC9NYWluTGF5b3V0PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBIb21lUGFnZTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n");

/***/ }),

/***/ "./src/styles/stitches.config.ts":
/*!***************************************!*\
  !*** ./src/styles/stitches.config.ts ***!
  \***************************************/
/*! exports provided: styled, css */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styled\", function() { return styled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"css\", function() { return css; });\n/* harmony import */ var _stitches_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stitches/react */ \"./node_modules/@stitches/react/dist/react.esm.js\");\n\n\nvar _createStyled = Object(_stitches_react__WEBPACK_IMPORTED_MODULE_0__[\"createStyled\"])({\n  tokens: {\n    fonts: {\n      $system: \"system-ui\",\n      $primary: \"AgrandirGrand\",\n      $secondary: \"AkzidenzGrotesk\"\n    },\n    colors: {\n      $primary: \"#ededed\",\n      $secondary: \"#0b0b0b\",\n      $tertiary: \"#903749\",\n      $alternative: \"#53354a\",\n      $backgroundColor: \"#0b0b0b\"\n    },\n    fontSizes: {\n      $1: \"14px\",\n      $2: \"16px\",\n      $3: \"24px\",\n      $4: \"32px\",\n      $5: \"40px\",\n      $6: \"56px\",\n      $7: \"70px\"\n    },\n    space: {\n      $1: \"8px\",\n      $2: \"16px\",\n      $3: \"24px\",\n      $4: \"32px\",\n      $5: \"40px\",\n      $6: \"56px\",\n      $7: \"70px\"\n    }\n  },\n  utils: {\n    m: function m(config) {\n      return function (value) {\n        return {\n          marginTop: value,\n          marginBottom: value,\n          marginLeft: value,\n          marginRight: value\n        };\n      };\n    },\n    mt: function mt(config) {\n      return function (value) {\n        return {\n          marginTop: value\n        };\n      };\n    },\n    mr: function mr(config) {\n      return function (value) {\n        return {\n          marginRight: value\n        };\n      };\n    },\n    mb: function mb(config) {\n      return function (value) {\n        return {\n          marginBottom: value\n        };\n      };\n    },\n    ml: function ml(config) {\n      return function (value) {\n        return {\n          marginLeft: value\n        };\n      };\n    },\n    mx: function mx(config) {\n      return function (value) {\n        return {\n          marginLeft: value,\n          marginRight: value\n        };\n      };\n    },\n    my: function my(config) {\n      return function (value) {\n        return {\n          marginTop: value,\n          marginBottom: value\n        };\n      };\n    },\n    size: function size(config) {\n      return function (value) {\n        return {\n          width: value,\n          height: value\n        };\n      };\n    },\n    linearGradient: function linearGradient(config) {\n      return function (value) {\n        return {\n          backgroundImage: \"linear-gradient(\".concat(value, \")\")\n        };\n      };\n    },\n    br: function br(config) {\n      return function (value) {\n        return {\n          borderRadius: value\n        };\n      };\n    }\n  }\n}),\n    styled = _createStyled.styled,\n    css = _createStyled.css;\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3N0eWxlcy9zdGl0Y2hlcy5jb25maWcudHM/NTA5OSJdLCJuYW1lcyI6WyJjcmVhdGVTdHlsZWQiLCJ0b2tlbnMiLCJmb250cyIsIiRzeXN0ZW0iLCIkcHJpbWFyeSIsIiRzZWNvbmRhcnkiLCJjb2xvcnMiLCIkdGVydGlhcnkiLCIkYWx0ZXJuYXRpdmUiLCIkYmFja2dyb3VuZENvbG9yIiwiZm9udFNpemVzIiwiJDEiLCIkMiIsIiQzIiwiJDQiLCIkNSIsIiQ2IiwiJDciLCJzcGFjZSIsInV0aWxzIiwibSIsImNvbmZpZyIsInZhbHVlIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwibXQiLCJtciIsIm1iIiwibWwiLCJteCIsIm15Iiwic2l6ZSIsIndpZHRoIiwiaGVpZ2h0IiwibGluZWFyR3JhZGllbnQiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJiciIsImJvcmRlclJhZGl1cyIsInN0eWxlZCIsImNzcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7b0JBRStCQSxvRUFBWSxDQUFDO0FBQzFDQyxRQUFNLEVBQUU7QUFDTkMsU0FBSyxFQUFFO0FBQ0xDLGFBQU8sRUFBRSxXQURKO0FBRUxDLGNBQVEsRUFBRSxlQUZMO0FBR0xDLGdCQUFVLEVBQUU7QUFIUCxLQUREO0FBTU5DLFVBQU0sRUFBRTtBQUNORixjQUFRLEVBQUUsU0FESjtBQUVOQyxnQkFBVSxFQUFFLFNBRk47QUFHTkUsZUFBUyxFQUFFLFNBSEw7QUFJTkMsa0JBQVksRUFBRSxTQUpSO0FBS05DLHNCQUFnQixFQUFFO0FBTFosS0FORjtBQWFOQyxhQUFTLEVBQUU7QUFDVEMsUUFBRSxFQUFFLE1BREs7QUFFVEMsUUFBRSxFQUFFLE1BRks7QUFHVEMsUUFBRSxFQUFFLE1BSEs7QUFJVEMsUUFBRSxFQUFFLE1BSks7QUFLVEMsUUFBRSxFQUFFLE1BTEs7QUFNVEMsUUFBRSxFQUFFLE1BTks7QUFPVEMsUUFBRSxFQUFFO0FBUEssS0FiTDtBQXNCTkMsU0FBSyxFQUFFO0FBQ0xQLFFBQUUsRUFBRSxLQURDO0FBRUxDLFFBQUUsRUFBRSxNQUZDO0FBR0xDLFFBQUUsRUFBRSxNQUhDO0FBSUxDLFFBQUUsRUFBRSxNQUpDO0FBS0xDLFFBQUUsRUFBRSxNQUxDO0FBTUxDLFFBQUUsRUFBRSxNQU5DO0FBT0xDLFFBQUUsRUFBRTtBQVBDO0FBdEJELEdBRGtDO0FBaUMxQ0UsT0FBSyxFQUFFO0FBQ0xDLEtBQUMsRUFBRSxXQUFDQyxNQUFEO0FBQUEsYUFBWSxVQUFDQyxLQUFEO0FBQUEsZUFBWTtBQUN6QkMsbUJBQVMsRUFBRUQsS0FEYztBQUV6QkUsc0JBQVksRUFBRUYsS0FGVztBQUd6Qkcsb0JBQVUsRUFBRUgsS0FIYTtBQUl6QkkscUJBQVcsRUFBRUo7QUFKWSxTQUFaO0FBQUEsT0FBWjtBQUFBLEtBREU7QUFPTEssTUFBRSxFQUFFLFlBQUNOLE1BQUQ7QUFBQSxhQUFZLFVBQUNDLEtBQUQ7QUFBQSxlQUFZO0FBQzFCQyxtQkFBUyxFQUFFRDtBQURlLFNBQVo7QUFBQSxPQUFaO0FBQUEsS0FQQztBQVVMTSxNQUFFLEVBQUUsWUFBQ1AsTUFBRDtBQUFBLGFBQVksVUFBQ0MsS0FBRDtBQUFBLGVBQVk7QUFDMUJJLHFCQUFXLEVBQUVKO0FBRGEsU0FBWjtBQUFBLE9BQVo7QUFBQSxLQVZDO0FBYUxPLE1BQUUsRUFBRSxZQUFDUixNQUFEO0FBQUEsYUFBWSxVQUFDQyxLQUFEO0FBQUEsZUFBWTtBQUMxQkUsc0JBQVksRUFBRUY7QUFEWSxTQUFaO0FBQUEsT0FBWjtBQUFBLEtBYkM7QUFnQkxRLE1BQUUsRUFBRSxZQUFDVCxNQUFEO0FBQUEsYUFBWSxVQUFDQyxLQUFEO0FBQUEsZUFBWTtBQUMxQkcsb0JBQVUsRUFBRUg7QUFEYyxTQUFaO0FBQUEsT0FBWjtBQUFBLEtBaEJDO0FBbUJMUyxNQUFFLEVBQUUsWUFBQ1YsTUFBRDtBQUFBLGFBQVksVUFBQ0MsS0FBRDtBQUFBLGVBQVk7QUFDMUJHLG9CQUFVLEVBQUVILEtBRGM7QUFFMUJJLHFCQUFXLEVBQUVKO0FBRmEsU0FBWjtBQUFBLE9BQVo7QUFBQSxLQW5CQztBQXVCTFUsTUFBRSxFQUFFLFlBQUNYLE1BQUQ7QUFBQSxhQUFZLFVBQUNDLEtBQUQ7QUFBQSxlQUFZO0FBQzFCQyxtQkFBUyxFQUFFRCxLQURlO0FBRTFCRSxzQkFBWSxFQUFFRjtBQUZZLFNBQVo7QUFBQSxPQUFaO0FBQUEsS0F2QkM7QUEyQkxXLFFBQUksRUFBRSxjQUFDWixNQUFEO0FBQUEsYUFBWSxVQUFDQyxLQUFEO0FBQUEsZUFBWTtBQUM1QlksZUFBSyxFQUFFWixLQURxQjtBQUU1QmEsZ0JBQU0sRUFBRWI7QUFGb0IsU0FBWjtBQUFBLE9BQVo7QUFBQSxLQTNCRDtBQStCTGMsa0JBQWMsRUFBRSx3QkFBQ2YsTUFBRDtBQUFBLGFBQVksVUFBQ0MsS0FBRDtBQUFBLGVBQVk7QUFDdENlLHlCQUFlLDRCQUFxQmYsS0FBckI7QUFEdUIsU0FBWjtBQUFBLE9BQVo7QUFBQSxLQS9CWDtBQWtDTGdCLE1BQUUsRUFBRSxZQUFDakIsTUFBRDtBQUFBLGFBQVksVUFBQ0MsS0FBRDtBQUFBLGVBQVk7QUFDMUJpQixzQkFBWSxFQUFFakI7QUFEWSxTQUFaO0FBQUEsT0FBWjtBQUFBO0FBbENDO0FBakNtQyxDQUFELEM7SUFBNUJrQixNLGlCQUFBQSxNO0lBQVFDLEcsaUJBQUFBLEciLCJmaWxlIjoiLi9zcmMvc3R5bGVzL3N0aXRjaGVzLmNvbmZpZy50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVN0eWxlZCB9IGZyb20gXCJAc3RpdGNoZXMvcmVhY3RcIjtcblxuZXhwb3J0IGNvbnN0IHsgc3R5bGVkLCBjc3MgfSA9IGNyZWF0ZVN0eWxlZCh7XG4gIHRva2Vuczoge1xuICAgIGZvbnRzOiB7XG4gICAgICAkc3lzdGVtOiBcInN5c3RlbS11aVwiLFxuICAgICAgJHByaW1hcnk6IFwiQWdyYW5kaXJHcmFuZFwiLFxuICAgICAgJHNlY29uZGFyeTogXCJBa3ppZGVuekdyb3Rlc2tcIixcbiAgICB9LFxuICAgIGNvbG9yczoge1xuICAgICAgJHByaW1hcnk6IFwiI2VkZWRlZFwiLFxuICAgICAgJHNlY29uZGFyeTogXCIjMGIwYjBiXCIsXG4gICAgICAkdGVydGlhcnk6IFwiIzkwMzc0OVwiLFxuICAgICAgJGFsdGVybmF0aXZlOiBcIiM1MzM1NGFcIixcbiAgICAgICRiYWNrZ3JvdW5kQ29sb3I6IFwiIzBiMGIwYlwiLFxuICAgIH0sXG4gICAgZm9udFNpemVzOiB7XG4gICAgICAkMTogXCIxNHB4XCIsXG4gICAgICAkMjogXCIxNnB4XCIsXG4gICAgICAkMzogXCIyNHB4XCIsXG4gICAgICAkNDogXCIzMnB4XCIsXG4gICAgICAkNTogXCI0MHB4XCIsXG4gICAgICAkNjogXCI1NnB4XCIsXG4gICAgICAkNzogXCI3MHB4XCIsXG4gICAgfSxcbiAgICBzcGFjZToge1xuICAgICAgJDE6IFwiOHB4XCIsXG4gICAgICAkMjogXCIxNnB4XCIsXG4gICAgICAkMzogXCIyNHB4XCIsXG4gICAgICAkNDogXCIzMnB4XCIsXG4gICAgICAkNTogXCI0MHB4XCIsXG4gICAgICAkNjogXCI1NnB4XCIsXG4gICAgICAkNzogXCI3MHB4XCIsXG4gICAgfSxcbiAgfSxcbiAgdXRpbHM6IHtcbiAgICBtOiAoY29uZmlnKSA9PiAodmFsdWUpID0+ICh7XG4gICAgICBtYXJnaW5Ub3A6IHZhbHVlLFxuICAgICAgbWFyZ2luQm90dG9tOiB2YWx1ZSxcbiAgICAgIG1hcmdpbkxlZnQ6IHZhbHVlLFxuICAgICAgbWFyZ2luUmlnaHQ6IHZhbHVlLFxuICAgIH0pLFxuICAgIG10OiAoY29uZmlnKSA9PiAodmFsdWUpID0+ICh7XG4gICAgICBtYXJnaW5Ub3A6IHZhbHVlLFxuICAgIH0pLFxuICAgIG1yOiAoY29uZmlnKSA9PiAodmFsdWUpID0+ICh7XG4gICAgICBtYXJnaW5SaWdodDogdmFsdWUsXG4gICAgfSksXG4gICAgbWI6IChjb25maWcpID0+ICh2YWx1ZSkgPT4gKHtcbiAgICAgIG1hcmdpbkJvdHRvbTogdmFsdWUsXG4gICAgfSksXG4gICAgbWw6IChjb25maWcpID0+ICh2YWx1ZSkgPT4gKHtcbiAgICAgIG1hcmdpbkxlZnQ6IHZhbHVlLFxuICAgIH0pLFxuICAgIG14OiAoY29uZmlnKSA9PiAodmFsdWUpID0+ICh7XG4gICAgICBtYXJnaW5MZWZ0OiB2YWx1ZSxcbiAgICAgIG1hcmdpblJpZ2h0OiB2YWx1ZSxcbiAgICB9KSxcbiAgICBteTogKGNvbmZpZykgPT4gKHZhbHVlKSA9PiAoe1xuICAgICAgbWFyZ2luVG9wOiB2YWx1ZSxcbiAgICAgIG1hcmdpbkJvdHRvbTogdmFsdWUsXG4gICAgfSksXG4gICAgc2l6ZTogKGNvbmZpZykgPT4gKHZhbHVlKSA9PiAoe1xuICAgICAgd2lkdGg6IHZhbHVlLFxuICAgICAgaGVpZ2h0OiB2YWx1ZSxcbiAgICB9KSxcbiAgICBsaW5lYXJHcmFkaWVudDogKGNvbmZpZykgPT4gKHZhbHVlKSA9PiAoe1xuICAgICAgYmFja2dyb3VuZEltYWdlOiBgbGluZWFyLWdyYWRpZW50KCR7dmFsdWV9KWAsXG4gICAgfSksXG4gICAgYnI6IChjb25maWcpID0+ICh2YWx1ZSkgPT4gKHtcbiAgICAgIGJvcmRlclJhZGl1czogdmFsdWUsXG4gICAgfSksXG4gIH0sXG59KTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/styles/stitches.config.ts\n");

/***/ })

},[["./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F&absolutePagePath=%2Fhome%2Fmarsa%2FDocumentos%2FGithub%2Fportfolio%2Fsrc%2Fpages%2Findex.tsx!./","webpack"]]]);